[
{
	"uri": "http://localhost:1313/workshop-template/vi/",
	"title": "Báo cáo thực tập",
	"tags": [],
	"description": "",
	"content": "Báo cáo thực tập Thông tin sinh viên: Họ và tên: Nguyễn Văn A\nSố điện thoại: 0989888999\nEmail: Anguyenvan@gmail.com\nTrường: Đại học Sư phạm Kỹ thuật TP.HCM\nNgành: Công nghệ thông tin\nLớp: AWS082025\nCông ty thực tập: Công ty TNHH Amazon Web Services Vietnam\nVị trí thực tập: FCJ Cloud Intern\nThời gian thực tập: Từ ngày 12/08/2025 đến ngày 12/11/2025\nNội dung báo cáo Worklog Proposal Các bài blogs đã dịch Các events đã tham gia Workshop Tự đánh giá Chia sẻ, đóng góp ý kiến "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/3-blogstranslated/3.1-blog1/",
	"title": "Blog 1",
	"tags": [],
	"description": "",
	"content": "Các mô hình OpenAI open-weight hiện đã có trên AWS Vào ngày 5 tháng 8 năm 2025, AWS đã công bố hai mô hình open-weight mới nhất của OpenAI — gpt-oss-120b và gpt-oss-20b — hiện đã có thể truy cập thông qua Amazon Bedrock và Amazon SageMaker JumpStart. Đây là một cột mốc quan trọng, vì đây là lần đầu tiên OpenAI cung cấp quyền truy cập công khai vào trọng số mô hình kể từ GPT-2, mở ra nhiều cơ hội tùy chỉnh và linh hoạt hơn.\nChuyên môn hóa nhiệm vụ Các mô hình open-weight mới của OpenAI được thiết kế cho các trường hợp sử dụng cụ thể. Chúng vượt trội trong các nhiệm vụ lập trình, phân tích dữ liệu khoa học và lý luận toán học, rất phù hợp cho các ngành và nhóm cần khả năng giải quyết vấn đề kỹ thuật nâng cao.\nNgữ cảnh mở rộng Cả hai mô hình đều hỗ trợ cửa sổ ngữ cảnh mở rộng lên đến 128.000 token. Điều này cho phép chúng xử lý các tài liệu, cuộc trò chuyện hoặc mã nguồn rất dài trong một lần chạy. Đối với các ứng dụng như phân tích pháp lý, bài nghiên cứu hoặc hội thoại kéo dài, kích thước ngữ cảnh lớn này mang lại lợi thế rõ rệt.\nTùy chọn triển khai AWS cung cấp hai cách chính để triển khai các mô hình này. Với Amazon Bedrock, khách hàng có thể truy cập mô hình như một dịch vụ được quản lý hoàn toàn, không cần lo về hạ tầng. Ngược lại, SageMaker JumpStart cho phép kiểm soát sâu hơn, hỗ trợ khám phá, triển khai và tinh chỉnh thông qua SageMaker Studio hoặc Python SDK. Cách tiếp cận kép này đáp ứng cả sự tiện lợi và tính linh hoạt tùy theo nhu cầu người dùng.\nKiểm soát bảo mật Bảo mật là trọng tâm trong các dịch vụ của AWS. Khách hàng có thể triển khai mô hình trong VPC riêng, đảm bảo cách ly dữ liệu và bảo vệ mạnh mẽ hơn. AWS cũng cung cấp Guardrails để giúp tổ chức sử dụng AI một cách có trách nhiệm bằng cách lọc đầu ra, áp dụng quy tắc tuân thủ và ngăn chặn phản hồi gây hại. Các kiểm soát tích hợp này giúp doanh nghiệp yên tâm hơn khi triển khai mô hình open-weight.\nHiệu năng theo công bố Theo AWS, mô hình gpt-oss-120b mang lại hiệu quả vượt trội khi chạy trên Bedrock. Công ty cho biết nó tiết kiệm chi phí gấp 3 lần Gemini, gấp 5 lần DeepSeek-R1 và gấp 2 lần so với o4 của chính OpenAI. Dù các chỉ số này rất ấn tượng, chúng dựa trên thử nghiệm nội bộ của AWS. Như mọi tuyên bố tiếp thị, các tổ chức nên tự kiểm chứng hiệu năng với khối lượng công việc thực tế trước khi tin tưởng hoàn toàn.\nMinh bạch với Chain-of-Thought Một tính năng nổi bật khác là khả năng xuất chuỗi suy luận (chain-of-thought). Tính năng này cho phép người dùng xem quá trình suy luận từng bước phía sau phản hồi của mô hình. Với các ứng dụng cần giải thích hoặc xác minh, đây là công cụ hữu ích. Tuy nhiên, trên thực tế, đầu ra dạng này có thể làm tăng độ phức tạp và không phải lúc nào cũng phù hợp với môi trường sản xuất.\nHạn chế và lưu ý Dù tiềm năng lớn, các mô hình này vẫn có hạn chế. Khi ra mắt, chúng chỉ có ở một số khu vực AWS: US West (Oregon) cho Bedrock, và US East (Ohio, Virginia) cùng Châu Á (Mumbai, Tokyo) cho SageMaker JumpStart. Việc giới hạn này có thể làm chậm quá trình áp dụng với các tổ chức ở khu vực khác.\nNgoài ra, dù open weights cho phép tùy chỉnh và tinh chỉnh sâu, nó cũng chuyển trách nhiệm sang người dùng. Doanh nghiệp cần đảm bảo biện pháp an toàn, quản lý yêu cầu tuân thủ và phòng tránh lạm dụng. Nói ngắn gọn, sự mở của mô hình mang lại tự do nhưng cũng đòi hỏi trách nhiệm.\nKết luận Việc ra mắt gpt-oss-120b và gpt-oss-20b của OpenAI trên AWS là bước tiến lớn trong việc phổ cập AI. Bằng cách kết hợp khả năng lý luận nâng cao, xử lý ngữ cảnh mở rộng và tùy chỉnh open-weight với sự tiện lợi của Bedrock và tính linh hoạt của SageMaker, AWS đang khẳng định vị thế là nền tảng mạnh mẽ cho đổi mới AI.\nTuy nhiên, khách hàng nên thận trọng. Giới hạn khu vực, các tuyên bố hiệu năng mang tính tiếp thị, và trách nhiệm quản lý open weights đều cần được cân nhắc kỹ. Nếu được kiểm chứng và quản trị đúng cách, các mô hình này có thể trở thành tài sản giá trị cho tổ chức muốn có tính minh bạch và kiểm soát trong hệ thống AI của mình.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/3-blogstranslated/3.2-blog2/",
	"title": "Blog 2",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nOpenSecrets sử dụng AWS để chuyển đổi minh bạch chính trị thông qua nâng cao đối sánh dữ liệu OpenSecrets là một tổ chức phi lợi nhuận độc lập, phi đảng phái với sứ mệnh trở thành nguồn thông tin đáng tin cậy về dòng tiền trong chính trị Mỹ. Tổ chức này thực hiện sứ mệnh bằng cách cung cấp dữ liệu, phân tích và công cụ toàn diện, đáng tin cậy cho các nhà hoạch định chính sách, nhà báo và công dân. Tầm nhìn của họ là người dân Mỹ sẽ sử dụng dữ liệu về tài chính chính trị để xây dựng một nền dân chủ sôi động, đại diện và phản hồi tốt hơn.\nThông qua AWS Imagine Grant—một chương trình tài trợ công khai cung cấp cả tiền mặt và tín dụng Amazon Web Services (AWS) cho các tổ chức phi lợi nhuận đăng ký sử dụng công nghệ đám mây để thúc đẩy sứ mệnh—OpenSecrets đã bắt đầu một dự án đầy tham vọng nhằm cách mạng hóa cơ sở dữ liệu đóng góp chính trị của mình. Dự án tập trung vào việc nâng cao độ chính xác và hiệu quả trong việc đối chiếu nhà tài trợ thông qua các kỹ thuật xử lý dữ liệu tiên tiến. Hệ thống cải tiến này giúp nhiều công dân và tổ chức hơn có thể giám sát hệ thống chính trị bằng cách làm cho dữ liệu tài chính chính trị chính xác và dễ tiếp cận hơn bao giờ hết.\nVật lộn với dữ liệu chính trị không nhất quán Dữ liệu đóng góp chính trị đến từ nhiều nguồn với các định dạng, quy ước đặt tên và tiêu chuẩn chất lượng khác nhau. Điều này tạo ra thách thức lớn cho các nhà nghiên cứu, nhà báo và công dân khi cố gắng theo dõi dòng tiền trong chính trị một cách chính xác.\nĐộ phức tạp của dữ liệu tài chính chính trị Thách thức bắt đầu từ sự đa dạng của các nguồn dữ liệu. Hồ sơ của Ủy ban Bầu cử Liên bang (FEC) có nhiều định dạng khác nhau, các ủy ban bầu cử bang lại có tiêu chuẩn báo cáo riêng, và các biểu mẫu công bố vận động hành lang lại theo quy ước khác. Một cá nhân có thể được liệt kê là \u0026ldquo;John Smith\u0026rdquo;, \u0026ldquo;J. Smith\u0026rdquo;, \u0026ldquo;John A. Smith\u0026rdquo; hoặc \u0026ldquo;Smith, John\u0026rdquo; ở các hồ sơ khác nhau, khiến việc theo dõi lịch sử đóng góp đầy đủ của họ gần như không thể nếu không có thuật toán đối chiếu tinh vi.\nCác thực thể doanh nghiệp còn là thách thức lớn hơn. Một công ty có thể xuất hiện trong hồ sơ dưới tên pháp lý đầy đủ, tên thương mại phổ biến, tên các công ty con khác nhau hoặc thậm chí qua các ủy ban hành động chính trị (PAC) khác nhau. Ví dụ, một công ty công nghệ có thể đóng góp dưới tên \u0026ldquo;ABC Corp\u0026rdquo;, \u0026ldquo;ABC Corporation\u0026rdquo;, \u0026ldquo;ABC Technology Solutions\u0026rdquo; hoặc \u0026ldquo;ABC PAC\u0026rdquo;, khiến việc tổng hợp ảnh hưởng thực sự của doanh nghiệp trở nên khó khăn.\nQuy trình thủ công đến giới hạn Nhóm OpenSecrets đã phải dành quá nhiều thời gian để làm sạch và đối chiếu dữ liệu thay vì phân tích để rút ra ý nghĩa. Nhân viên phải xem xét thủ công các trường hợp trùng khớp tiềm năng, đối chiếu tên giữa các cơ sở dữ liệu và xác minh danh tính qua hồ sơ công khai—một quy trình có thể mất hàng giờ với các trường hợp phức tạp liên quan đến tên phổ biến hoặc doanh nghiệp lớn.\nQuy trình thủ công này không chỉ tốn thời gian mà còn dễ xảy ra lỗi con người—có thể làm sai lệch độ chính xác của dữ liệu tổ chức. Một nhà tài trợ bị xác định nhầm có thể làm lệch phân tích các mẫu đóng góp, trong khi các kết nối bị bỏ sót giữa các thực thể có thể che giấu các mối quan hệ quan trọng trong mạng lưới tài chính chính trị.\nThách thức càng trở nên cấp bách vì dữ liệu tài chính chính trị tăng theo cấp số nhân trong các kỳ bầu cử. Ví dụ, trong kỳ bầu cử 2024, OpenSecrets đã xử lý hơn 500 triệu hồ sơ đóng góp, so với khoảng 200 triệu trong các năm không bầu cử. Xử lý thủ công ngày càng không bền vững khi cả khối lượng và tốc độ dữ liệu đầu vào tiếp tục tăng nhanh.\nTầm quan trọng của độ chính xác dữ liệu Nếu không có giải pháp tự động hóa, OpenSecrets có nguy cơ tụt lại phía sau trong sứ mệnh cung cấp thông tin kịp thời, chính xác về tài trợ chiến dịch và hoạt động vận động hành lang. Dữ liệu không chính xác hoặc không đầy đủ có thể khiến nhà báo viết bài điều tra bị sai lệch, nhà nghiên cứu học thuật bị nhầm lẫn hoặc công dân không hiểu rõ nguồn tài trợ của đại diện mình.\nTổ chức cần một hệ thống có thể xử lý hàng trăm triệu bản ghi trong khi vẫn duy trì các tiêu chuẩn chính xác cao cần thiết cho công việc minh bạch chính trị. Kết quả dương tính giả trong đối chiếu nhà tài trợ có thể gán nhầm đóng góp, trong khi kết quả âm tính giả có thể che giấu các mẫu ảnh hưởng chính trị quan trọng—cả hai đều làm suy yếu uy tín và sứ mệnh của tổ chức.\nXây dựng giải pháp đối chiếu dữ liệu có khả năng mở rộng Ban đầu OpenSecrets đề xuất sử dụng machine learning để nhận diện thực thể, nhưng khi dự án tiến triển, nhóm đã chuyển sang phương pháp quy tắc xác định phù hợp hơn với nhu cầu cụ thể. Họ quyết định sử dụng Snowflake trên AWS để xử lý dữ liệu và Elasticsearch trên AWS để đối chiếu và chấm điểm thực thể.\nTừ machine learning đến đối chiếu xác định Cách tiếp cận machine learning ban đầu, dù tiên tiến về mặt kỹ thuật, lại gặp nhiều thách thức với trường hợp sử dụng cụ thể của OpenSecrets. Thuật toán hộp đen khiến nhân viên khó hiểu lý do tại sao một số đối chiếu được thực hiện, gây ra vấn đề về niềm tin khi giải thích phương pháp cho các nhà nghiên cứu và nhà báo bên ngoài. Ngoài ra, yêu cầu dữ liệu huấn luyện cho mô hình ML là rất lớn, và tổ chức cần kết quả có thể kiểm toán và giải thích để duy trì uy tín trong công việc minh bạch chính trị.\nViệc chuyển sang phương pháp quy tắc xác định mang lại nhiều lợi ích chính:\nMinh bạch: Mỗi quyết định đối chiếu đều có thể truy vết về quy tắc và tiêu chí chấm điểm cụ thể Giải thích được: Nhân viên có thể giải thích cho người dùng bên ngoài chính xác cách đối chiếu được xác định Linh hoạt: Quy tắc có thể điều chỉnh dựa trên chuyên môn mà không cần huấn luyện lại mô hình Tốc độ: Thuật toán xác định xử lý bản ghi nhanh hơn so với suy luận ML phức tạp Kiến trúc kỹ thuật và dịch vụ AWS Việc vận hành cả Snowflake và Elasticsearch trên AWS cung cấp cho OpenSecrets khả năng mở rộng, tốc độ và hạ tầng tập trung cần thiết để xử lý bộ dữ liệu khổng lồ. Kiến trúc này tận dụng nhiều dịch vụ AWS chủ chốt:\nAmazon EC2 cung cấp tài nguyên tính toán cho các cụm Elasticsearch, phục vụ nhu cầu tìm kiếm và đối chiếu thời gian thực. Nhóm đã cấu hình auto-scaling để xử lý khối lượng công việc biến động trong các đợt cao điểm, như khi đến hạn nộp hồ sơ FEC với hàng nghìn bản ghi mới đồng thời đổ về.\nAmazon S3 là kho dữ liệu chính, lưu trữ file đóng góp thô, bộ dữ liệu đã xử lý và bản sao lưu dữ liệu lịch sử. Nhóm đã triển khai chính sách vòng đời để tự động chuyển dữ liệu cũ sang lớp lưu trữ rẻ hơn mà vẫn đảm bảo truy cập cho phân tích lịch sử.\nAWS Lambda xử lý các tác vụ tiền xử lý dữ liệu, làm sạch file đầu vào và chuẩn hóa định dạng trước khi vào pipeline chính. Cách tiếp cận serverless này cho phép nhóm xử lý luồng dữ liệu đến mà không cần duy trì hạ tầng chuyên dụng.\nAmazon RDS cung cấp dịch vụ cơ sở dữ liệu quan hệ để lưu trữ kết quả đã xử lý và duy trì bảng tham chiếu chuẩn hóa tên và mối quan hệ thực thể.\nChi tiết triển khai Elasticsearch Elasticsearch là trung tâm của hệ thống đối chiếu. Nhóm đã xây dựng chiến lược lập chỉ mục tinh vi cho phép đối chiếu mờ trên nhiều trường cùng lúc. Các tính năng chính gồm:\nĐối chiếu ngữ âm sử dụng thuật toán Soundex và Metaphone để phát hiện các biến thể tên như \u0026ldquo;Smith\u0026rdquo; và \u0026ldquo;Smyth\u0026rdquo; hoặc \u0026ldquo;Catherine\u0026rdquo; và \u0026ldquo;Katherine\u0026rdquo;.\nChấm điểm chuẩn hóa giúp đánh giá các loại đối chiếu dựa trên độ tin cậy. Đối chiếu số an sinh xã hội chính xác được chấm điểm cao nhất, trong khi đối chiếu tên mờ được chấm điểm dựa trên độ hiếm của tên và chất lượng thông tin hỗ trợ.\nCụm địa lý tăng độ tin cậy khi nhà tài trợ có cùng địa chỉ, mã ZIP hoặc thông tin nơi làm việc, giúp phân biệt các cá nhân trùng tên.\nQuy trình xử lý dữ liệu Hạ tầng AWS cho phép nhóm nghiên cứu và kỹ thuật xử lý hàng trăm triệu bản ghi hiệu quả, đồng thời linh hoạt điều chỉnh phương pháp khi hiểu rõ hơn về thách thức dữ liệu. Quy trình đầy đủ gồm các giai đoạn:\nNạp dữ liệu: File thô tải lên S3 kích hoạt Lambda để xử lý ban đầu Chuẩn hóa: Tên, địa chỉ, nơi làm việc được chuẩn hóa bằng cơ sở dữ liệu tham chiếu Lập chỉ mục Elasticsearch: Bản ghi đã xử lý được lập chỉ mục với nhiều chiến lược tìm kiếm Thực thi đối chiếu: Chạy batch đối chiếu trên toàn bộ dữ liệu Chấm điểm và xếp hạng: Đối chiếu tiềm năng được chấm điểm và xếp hạng theo độ tin cậy Hàng đợi kiểm tra thủ công: Đối chiếu độ tin cậy thấp được gắn cờ để xác minh thủ công Lưu kết quả: Đối chiếu xác nhận được lưu vào RDS để phân tích tiếp Cách tiếp cận này mang lại nhiều lợi thế so với đề xuất machine learning ban đầu: chu kỳ phát triển nhanh hơn, logic minh bạch mà nhóm có thể hiểu và giải thích, cùng khả năng chấm điểm và xếp hạng đối chiếu. Hệ thống chấm điểm này cho phép gắn cờ các kết quả không chắc chắn để con người kiểm tra, giúp tự động hóa bổ trợ chứ không thay thế chuyên môn con người.\nTối ưu hiệu năng Nhóm đã triển khai nhiều tối ưu hiệu năng để xử lý quy mô dữ liệu tài chính chính trị:\nXử lý song song phân phối tác vụ đối chiếu lên nhiều node Elasticsearch, rút ngắn thời gian xử lý toàn bộ dữ liệu từ hàng tuần xuống còn vài ngày.\nCập nhật gia tăng cho phép đối chiếu bản ghi mới với dữ liệu hiện có mà không cần xử lý lại toàn bộ, giúp cập nhật gần như thời gian thực trong các kỳ báo cáo cao điểm.\nChiến lược cache lưu trữ kết quả truy vấn phổ biến trong Amazon ElastiCache, giảm thời gian phản hồi cho các truy vấn và dashboard thường dùng.\nChuyển đổi nghiên cứu tài chính chính trị Hệ thống mới đối chiếu hàng trăm triệu bản ghi với độ chính xác cao hơn, tự động hóa việc nhận diện thực thể trong khi gắn cờ các bản ghi có độ tin cậy không đủ cho việc xem xét của con người. Bước nhảy vọt trong xử lý dữ liệu này cải thiện chất lượng của các bộ dữ liệu công khai quan trọng, cho phép các nhà nghiên cứu tập trung vào phân tích thay vì làm sạch dữ liệu, và mở ra những hiểu biết sâu sắc hơn về tài trợ chiến dịch và vận động hành lang ở cả cấp liên bang và tiểu bang.\nCải thiện có thể đo lường được về chất lượng dữ liệu Sự chuyển mình này mang lại những cải tiến có thể đo lường được trên nhiều khía cạnh của chất lượng dữ liệu:\nĐộ chính xác của các phép đối chiếu tăng 85% so với quy trình thủ công trước đây, với tỷ lệ sai sót giảm xuống dưới 2%. Sự cải thiện này đặc biệt rõ rệt đối với các thực thể doanh nghiệp, nơi hệ thống thành công trong việc xác định các mối quan hệ giữa công ty mẹ và các chi nhánh, cũng như các kết nối PAC mà trước đây phải mất hàng giờ nghiên cứu thủ công.\nThời gian xử lý giảm 95%, với việc làm mới toàn bộ dữ liệu hiện nay chỉ mất vài ngày thay vì vài tháng. Trong các kỳ bầu cử cao điểm, hệ thống có thể xử lý hơn 100.000 hồ sơ đóng góp mới mỗi ngày, so với khả năng trước đây chỉ khoảng 5.000 hồ sơ mỗi ngày qua các quy trình thủ công.\nĐộ bao phủ tăng 40%, khi hệ thống tự động phát hiện các kết nối tinh vi mà các nhà đánh giá thủ công có thể bỏ lỡ do mệt mỏi hoặc hạn chế về thời gian. Điều này bao gồm việc phát hiện các mối quan hệ giữa các nhà tài trợ sử dụng các biến thể tên khác nhau qua nhiều chu kỳ bầu cử hoặc loại hình đóng góp.\nNâng cao khả năng phân tích Chất lượng dữ liệu được cải thiện đã mở ra những khả năng phân tích mới mà trước đây không thể thực hiện được do dữ liệu không nhất quán:\nTheo dõi nhà tài trợ theo thời gian hiện cho phép các nhà nghiên cứu theo dõi các mẫu đóng góp chính trị của từng nhà tài trợ qua nhiều chu kỳ bầu cử, tiết lộ các xu hướng trong sự tham gia và thay đổi liên minh chính trị. Khả năng này đã cho phép một số nghiên cứu đột phá về hành vi của nhà tài trợ và sự phân cực chính trị.\nPhân tích mạng lưới doanh nghiệp có thể vẽ ra các mối quan hệ phức tạp giữa công ty mẹ, các chi nhánh và các PAC liên quan, cung cấp bức tranh đầy đủ hơn về ảnh hưởng chính trị của doanh nghiệp. Hệ thống có thể tự động xác định khi một thực thể doanh nghiệp duy nhất đang đóng góp qua nhiều kênh, giúp các nhà báo và nhà nghiên cứu hiểu rõ hơn về quy mô thực sự của sự tham gia chính trị của doanh nghiệp.\nPhân tích cụm địa lý tiết lộ các mẫu vùng miền trong việc đóng góp chính trị, giúp các nhà nghiên cứu hiểu cách mà điều kiện kinh tế địa phương, sự hiện diện của ngành công nghiệp và các yếu tố nhân khẩu học ảnh hưởng đến các đóng góp chính trị. Điều này đặc biệt có giá trị cho các nghiên cứu về giao điểm giữa quyền lực kinh tế và chính trị.\nTác động đến quy trình làm việc của các bên liên quan Chất lượng dữ liệu được nâng cao cho phép các nhà báo viết những câu chuyện chính xác hơn với độ sâu và sắc thái lớn hơn. Các phóng viên hiện có thể nhanh chóng xác định tất cả các đóng góp từ một cá nhân hoặc mạng lưới doanh nghiệp mà không phải mất hàng ngày cho nghiên cứu thủ công. Một số cuộc điều tra đã giành giải Pulitzer đã tận dụng dữ liệu OpenSecrets được cải thiện để phơi bày các mẫu ảnh hưởng chính trị trước đây bị ẩn giấu.\nCác nhà nghiên cứu tiến hành các nghiên cứu đáng tin cậy với kích thước mẫu lớn hơn và độ tin cậy cao hơn trong các phát hiện của họ. Các tổ chức học thuật đã báo cáo rằng các nghiên cứu sử dụng dữ liệu OpenSecrets hiện tốn ít thời gian hơn cho việc chuẩn bị dữ liệu, cho phép nhiều nguồn lực hơn được dành cho phân tích và diễn giải.\nCông dân đưa ra quyết định thông minh hơn về các ứng cử viên chính trị thông qua thông tin toàn diện và dễ tiếp cận hơn. Dữ liệu được cải thiện cung cấp năng lượng cho các công cụ thân thiện với người dùng trên trang web OpenSecrets, bao gồm bản đồ nhà tài trợ tương tác, dòng thời gian đóng góp và hình ảnh mạng lưới ảnh hưởng giúp dữ liệu tài chính chính trị phức tạp trở nên dễ hiểu với công chúng.\nMở rộng cho sự tăng trưởng trong tương lai Sự chuyển mình của OpenSecrets hỗ trợ nền dân chủ thông qua tăng cường minh bạch, trong khi khả năng mở rộng của hệ thống đáp ứng nhu cầu ngày càng tăng về các công cụ minh bạch chính trị khi nó tiếp tục mở rộng cho các nguồn dữ liệu mới. Hạ tầng AWS có thể dễ dàng tiếp nhận:\nTích hợp dữ liệu tiểu bang và địa phương: Hệ thống hiện đang xử lý dữ liệu tài chính chiến dịch từ 15 tiểu bang bổ sung, với kế hoạch mở rộng ra tất cả 50 tiểu bang trong vòng hai năm tới. Mỗi nguồn dữ liệu mới chỉ yêu cầu thay đổi tối thiểu về hạ tầng, vì kiến trúc linh hoạt có thể tiếp nhận các định dạng và yêu cầu nộp hồ sơ khác nhau.\nKhả năng xử lý thời gian thực: Trong các chu kỳ bầu cử lớn, hệ thống có thể cung cấp cập nhật gần như thời gian thực khi các hồ sơ mới được nộp cho các ủy ban bầu cử, cho phép các nhà báo báo cáo về các mẫu đóng góp khi chúng phát triển thay vì phải chờ đợi các bản tóm tắt hàng quý.\nTiềm năng mở rộng quốc tế: Ngăn công nghệ cơ sở hạ tầng có thể được điều chỉnh để xử lý dữ liệu tài chính chính trị từ các quốc gia dân chủ khác, hỗ trợ các sáng kiến minh bạch toàn cầu và nghiên cứu chính trị so sánh.\nDân chủ hóa quyền truy cập dữ liệu chính trị Có lẽ quan trọng nhất, sự chuyển mình này đã dân chủ hóa quyền truy cập vào thông tin tài chính chính trị. Trước đây, chỉ có các tổ chức tin tức hoặc các tổ chức học thuật có nguồn lực tốt mới có thể đủ khả năng cho thời gian nhân sự cần thiết để tiến hành nghiên cứu tài chính chính trị toàn diện. Giờ đây, các phương tiện truyền thông nhỏ hơn, các tổ chức dân sự và các nhà nghiên cứu độc lập có thể truy cập dữ liệu chất lượng cao, đã được xử lý thông qua các API và dịch vụ tải xuống hàng loạt của OpenSecrets.\nSự dân chủ hóa này đã dẫn đến một cuộc bùng nổ các sáng kiến minh bạch ở cấp độ địa phương và tiểu bang, khi các tổ chức cộng đồng giờ đây có thể dễ dàng phân tích các mẫu tài trợ chính trị địa phương của họ và buộc các quan chức đắc cử phải chịu trách nhiệm về các nguồn tài trợ của họ.\nBài học cho việc triển khai công nghệ phi lợi nhuận Kinh nghiệm của OpenSecrets cung cấp hướng dẫn quý giá cho các tổ chức phi lợi nhuận khác khi bắt tay vào các dự án chuyển đổi công nghệ. Lời khuyên đầu tiên của nhóm lãnh đạo là hãy linh hoạt, vì kế hoạch ban đầu có thể không phải là con đường tốt nhất khi bạn đã đi sâu vào công việc.\nÔm lấy phát triển lặp đi lặp lại thay vì lập kế hoạch hoàn hảo Sự chuyển mình của OpenSecrets chứng minh giá trị của phương pháp linh hoạt trong các dự án công nghệ phi lợi nhuận. Thay vì dành nhiều tháng để tạo ra các thông số kỹ thuật chi tiết, nhóm đã bắt đầu với cách tiếp cận sản phẩm khả thi tối thiểu (MVP) có thể xử lý một tập hợp con dữ liệu của họ và cung cấp giá trị ngay lập tức.\nJacob Hileman, Giám đốc CNTT của OpenSecrets, giải thích: \u0026ldquo;Chúng tôi đã học được rằng cố gắng giải quyết mọi thứ cùng một lúc thực sự đã làm chậm tiến độ của chúng tôi. Bằng cách tập trung vào việc làm cho một phần hoạt động thật tốt trước tiên, chúng tôi có thể xác thực cách tiếp cận của mình và xây dựng niềm tin với các bên liên quan trước khi giải quyết các thách thức phức tạp hơn.\u0026rdquo;\nCách tiếp cận lặp đi lặp lại này đã cho phép nhóm:\nKiểm tra giả định sớm với dữ liệu thực tế thay vì các kịch bản lý thuyết Xây dựng sự ủng hộ của các bên liên quan bằng cách chứng minh kết quả cụ thể nhanh chóng Xác định các thách thức bất ngờ trước khi chúng trở thành rào cản lớn Thích ứng với các yêu cầu thay đổi khi nhu cầu của tổ chức tiến triển trong suốt dự án Ưu tiên khả năng giải thích hơn là sự tinh vi Nhóm OpenSecrets cũng nhấn mạnh tầm quan trọng của việc xây dựng với người dùng trong tâm trí. Nhóm cần logic đối chiếu rõ ràng, có thể giải thích được, chứ không phải một giải pháp hộp đen. Cách tiếp cận tập trung vào người dùng này đã dẫn đến sự phát triển của một hệ thống cuối cùng có thể được tin cậy và sử dụng hiệu quả bởi nhân viên OpenSecrets và các đối tác bên ngoài.\nXây dựng niềm tin là rất quan trọng vì uy tín của OpenSecrets phụ thuộc vào độ chính xác và minh bạch của dữ liệu. Các thành viên trong nhóm cần hiểu cách mà các phép đối chiếu được thực hiện để họ có thể giải thích phương pháp cho các nhà báo, nhà nghiên cứu và công chúng. Người dùng bên ngoài cần có niềm tin rằng các thuật toán cơ bản là hợp lý và không có thiên lệch.\nQuyết định từ bỏ machine learning để chuyển sang đối chiếu dựa trên quy tắc là ví dụ điển hình cho nguyên tắc này. Trong khi các phương pháp ML có thể đạt được độ chính xác cao hơn một chút trong một số trường hợp, hệ thống xác định cung cấp:\nKhả năng kiểm toán hoàn toàn của mọi quyết định đối chiếu Tham số có thể điều chỉnh mà các chuyên gia trong lĩnh vực có thể tinh chỉnh Kết quả có thể giải thích có thể được bảo vệ trong các diễn đàn công khai Quy trình có thể tái tạo mà các nhà nghiên cứu bên ngoài có thể xác minh Tận dụng hạ tầng đám mây để linh hoạt Có lẽ quan trọng nhất, OpenSecrets đã học được không nên chờ đợi sự hoàn hảo. Nhóm khuyên rằng hãy ra mắt, học hỏi và tinh chỉnh theo chu kỳ. Việc chạy mọi thứ trên AWS đã giúp họ dễ dàng xoay chuyển nhanh chóng mà không cần phải thiết kế lại toàn bộ hệ thống, cho phép họ điều chỉnh cách tiếp cận dựa trên thử nghiệm và phản hồi từ thực tế.\nKiến trúc ưu tiên đám mây đã chứng minh là rất cần thiết để quản lý sự không chắc chắn trong phạm vi dự án. Khi nhóm tìm hiểu thêm về các thách thức dữ liệu của mình, họ có thể:\nTăng hoặc giảm quy mô tài nguyên dựa trên nhu cầu xử lý mà không cần đầu tư vốn Thử nghiệm với các dịch vụ khác nhau (Elasticsearch, các động cơ cơ sở dữ liệu khác nhau, v.v.) mà không cần cam kết về hạ tầng Triển khai cập nhật nhanh chóng thông qua các pipeline CI/CD tự động Cuộn lại các thay đổi nhanh chóng nếu các phương pháp mới không hoạt động như mong đợi Lập kế hoạch cho quản lý thay đổi và sự chấp nhận của người dùng Một bài học bất ngờ liên quan đến quản lý thay đổi trong tổ chức. Các nhân viên đã dành nhiều năm phát triển chuyên môn trong việc xử lý dữ liệu thủ công ban đầu xem hệ thống tự động với sự hoài nghi. Nhóm đã học được rằng sự chấp nhận của người dùng không chỉ đòi hỏi thành công về mặt kỹ thuật—nó cần sự giao tiếp và đào tạo cẩn thận.\nCác chiến lược áp dụng thành công bao gồm:\nTham gia nhân viên vào phát triển thuật toán bằng cách để họ xác nhận kết quả đối chiếu và đề xuất cải tiến Các buổi đào tạo giúp nhân viên hiểu cách sử dụng các công cụ mới một cách hiệu quả Chuyển đổi dần dần thay vì thay thế đột ngột các quy trình làm việc hiện có Tài liệu rõ ràng giúp nhân viên tự giải quyết các vấn đề một cách độc lập Xây dựng quan hệ đối tác và tận dụng cơ hội tài trợ AWS Imagine Grant không chỉ quan trọng về mặt tài chính, mà còn tạo ra trách nhiệm và xác nhận bên ngoài về tầm quan trọng của dự án. Quy trình nộp đơn xin tài trợ đã buộc nhóm phải làm rõ mục tiêu và chỉ số thành công của họ, trong khi tính công khai của tài trợ tạo ra áp lực tích cực để đạt được kết quả.\nCác tổ chức phi lợi nhuận khác nên xem xét:\nNộp đơn xin nhiều tài trợ để đa dạng hóa nguồn vốn và giảm rủi ro Xây dựng mối quan hệ với các đối tác công nghệ hiểu được những hạn chế của phi lợi nhuận Ghi lại các thành công để hỗ trợ cho các đơn xin tài trợ trong tương lai và truyền cảm hứng cho các tổ chức khác Chia sẻ bài học kinh nghiệm với cộng đồng công nghệ phi lợi nhuận rộng lớn hơn Đo lường tác động vượt ra ngoài các chỉ số kỹ thuật Trong khi các chỉ số kỹ thuật như tốc độ xử lý và độ chính xác là quan trọng, OpenSecrets đã học được cách đo lường tác động sứ mệnh. Thành công thực sự của dự án không chỉ nằm ở công nghệ mà còn ở cách nó giúp tổ chức phục vụ tốt hơn cho nền dân chủ.\nCác chỉ số tác động chính bao gồm:\nTăng cường sự quan tâm của truyền thông sử dụng dữ liệu OpenSecrets trong các câu chuyện điều tra Các ấn phẩm nghiên cứu học thuật tận dụng các bộ dữ liệu được cải thiện Các chỉ số tham gia của công dân thông qua việc sử dụng trang web và việc áp dụng API Các cuộc thảo luận chính sách được thông báo bởi phân tích tài chính chính trị toàn diện hơn Năng lực tổ chức được tự động hóa để tập trung vào công việc có giá trị cao hơn Những điều cần rút ra cho các tổ chức Linh hoạt là rất quan trọng: Hãy chuẩn bị để điều chỉnh kế hoạch ban đầu khi bạn tìm hiểu thêm về thách thức của mình Thiết kế tập trung vào người dùng: Xây dựng các giải pháp mà đội ngũ của bạn có thể hiểu, tin tưởng và sử dụng hiệu quả Cách tiếp cận lặp đi lặp lại: Ra mắt sớm, học hỏi từ việc sử dụng thực tế và tinh chỉnh liên tục Lợi thế hạ tầng đám mây: AWS đã cho phép các bước xoay chuyển nhanh chóng và mở rộng quy mô mà không cần tái kiến trúc lớn Hợp tác giữa con người và AI: Các giải pháp tốt nhất là những giải pháp nâng cao chứ không thay thế chuyên môn con người Hỗ trợ nền dân chủ thông qua công nghệ Nền dân chủ đòi hỏi trách nhiệm chính trị, điều này chỉ có thể đạt được thông qua minh bạch. OpenSecrets hỗ trợ những nguyên tắc cốt lõi của hệ thống chính trị của chúng ta bằng cách cung cấp dữ liệu, phân tích và công cụ toàn diện, đáng tin cậy cho các nhà hoạch định chính sách, nhà báo và công dân. Sự chuyển mình của tổ chức minh họa cách mà công nghệ đám mây có thể khuếch đại tác động của các sứ mệnh phi lợi nhuận, tạo ra thông tin có thể tiếp cận và chính xác hơn cho sự tham gia dân chủ.\nMở rộng hệ sinh thái minh bạch Hệ thống được cải thiện trao quyền cho các nhà nghiên cứu, các nhà báo và công dân cùng nhau hiểu rõ hơn về dòng chảy của tiền bạc trong chính trị, cuối cùng góp phần vào một xã hội dân chủ được thông tin và tham gia nhiều hơn. Nhưng tác động mở rộng ra ngoài từng người dùng—nó đang tạo ra một hiệu ứng mạng lưới củng cố các thể chế dân chủ.\nCác tổ chức học thuật hiện đang đưa dữ liệu OpenSecrets vào phát triển chương trình giảng dạy, dạy cho sinh viên cách phân tích các mẫu tài chính chính trị như một phần của giáo dục về civics và khoa học chính trị. Các trường đại học báo cáo rằng sinh viên hiện có thể thực hiện các dự án nghiên cứu có ý nghĩa sử dụng dữ liệu tài chính chính trị, trong khi trước đây, những dự án như vậy yêu cầu nguồn lực ở cấp độ sau đại học.\nCác tổ chức tin tức đang phát triển cảnh báo tự động thông báo cho các phóng viên khi có các mẫu đóng góp bất thường xuất hiện, cho phép đưa tin kịp thời hơn về các câu chuyện tài chính chính trị. Các phương tiện truyền thông địa phương, đặc biệt, đã hưởng lợi từ khả năng phân tích nhanh chóng các nguồn tài trợ của đại diện của họ mà không cần đội ngũ dữ liệu chuyên dụng.\nCác tổ chức công nghệ dân sự đang xây dựng các ứng dụng hạ nguồn làm cho dữ liệu tài chính chính trị dễ tiếp cận hơn với công chúng. Chúng bao gồm các ứng dụng di động cho phép công dân quét mã QR trên các quảng cáo chính trị để xem nguồn tài trợ, các tiện ích mở rộng trình duyệt thêm thông tin về các bài báo tin tức, và các bot mạng xã hội cung cấp ngữ cảnh về chi tiêu chính trị trong thời gian thực.\nÝ nghĩa toàn cầu cho minh bạch dân chủ Sự thành công của sự chuyển mình của OpenSecrets đã thu hút sự chú ý từ các tổ chức minh bạch quốc tế đang tìm cách cải thiện giám sát tài chính chính trị ở các nền dân chủ khác. Một số quốc gia hiện đang khám phá các cách tiếp cận tương tự để tự động hóa phân tích tài chính chiến dịch, có khả năng tạo ra một mạng lưới toàn cầu của các sáng kiến minh bạch chính trị.\nLiên minh Châu Âu đã bày tỏ sự quan tâm đến việc điều chỉnh phương pháp OpenSecrets cho việc theo dõi tài chính chính trị xuyên biên giới, đặc biệt là trước những lo ngại về ảnh hưởng nước ngoài trong các cuộc bầu cử. Kiến trúc công nghệ mà AWS phát triển có thể mở rộng để xử lý dữ liệu đa quyền tài phán với các ngôn ngữ và khuôn khổ quy định khác nhau.\nCác nền dân chủ mới nổi đặc biệt quan tâm đến cách tiếp cận tiết kiệm chi phí, vì nhiều quốc gia không thể đủ khả năng duy trì các đội ngũ phân tích dữ liệu lớn nhưng cần các công cụ hiệu quả để giám sát sự tuân thủ tài chính chính trị và phát hiện các mẫu tham nhũng.\nCông nghệ như một lực lượng đổi mới dân chủ Sự chuyển mình của OpenSecrets minh họa cách mà các khoản đầu tư công nghệ chiến lược có thể củng cố các thể chế dân chủ vào thời điểm niềm tin vào chính phủ và truyền thông đang suy giảm. Bằng cách làm cho dữ liệu tài chính chính trị dễ tiếp cận và đáng tin cậy hơn, dự án góp phần vào một số xu hướng quan trọng:\nJournalsim dựa trên dữ liệu đang trở nên phổ biến hơn khi các phóng viên có được các công cụ và bộ dữ liệu tốt hơn. Sự chuyển mình này về phía báo cáo dựa trên bằng chứng giúp chống lại thông tin sai lệch và cung cấp cho công dân một nền tảng thông tin vững chắc hơn cho các cuộc thảo luận chính trị.\nKhả năng giám sát của công dân đang mở rộng khi các cá nhân và tổ chức cơ sở nhận được các công cụ trước đây chỉ có sẵn cho các tổ chức có nguồn lực tốt. Sự dân chủ hóa các công cụ giám sát này tạo ra nhiều cơ chế trách nhiệm phân tán hơn.\nNghiên cứu học thuật về tài chính chính trị đang tăng tốc khi các nhà nghiên cứu có thể tập trung vào phân tích thay vì thu thập và làm sạch dữ liệu. Điều này dẫn đến việc hiểu biết tốt hơn về cách mà tiền bạc ảnh hưởng đến kết quả chính trị và nhiều khuyến nghị chính sách dựa trên bằng chứng hơn.\nHướng đi và tính bền vững trong tương lai Nhìn về phía trước, OpenSecrets dự định tận dụng hạ tầng AWS cho một số mở rộng đổi mới:\nPhân tích dự đoán có thể giúp xác định các mẫu đóng góp có thể bất hợp pháp hoặc sự phối hợp giữa các diễn viên chính trị được cho là độc lập. Bằng cách phân tích các mẫu lịch sử, hệ thống có thể đánh dấu các hoạt động bất thường để điều tra của con người.\nCông cụ phân tích mạng sẽ vẽ ra các mối quan hệ phức tạp giữa các nhà tài trợ, ứng cử viên và tổ chức chính trị, tiết lộ các mạng lưới ảnh hưởng có thể không rõ ràng từ các hồ sơ đóng góp cá nhân.\nTích hợp với dữ liệu vận động hành lang sẽ cung cấp bức tranh toàn diện hơn về ảnh hưởng của tổ chức bằng cách kết nối các đóng góp chiến dịch với chi tiêu vận động hành lang và kết quả chính sách.\nGiám sát thời gian thực trong các chu kỳ bầu cử có thể cho phép phát hiện ngay lập tức các vi phạm tài chính chiến dịch hoặc sự phối hợp giữa các ứng cử viên và các nhóm chi tiêu bên ngoài.\nPhong trào công nghệ phi lợi nhuận rộng lớn hơn Sự thành công của OpenSecrets góp phần vào một phong trào ngày càng tăng của đổi mới phi lợi nhuận được hỗ trợ bởi công nghệ. Dự án chứng minh rằng với hạ tầng đám mây thích hợp và các đối tác chiến lược, những tổ chức tương đối nhỏ cũng có thể đạt được những tác động trước đây chỉ yêu cầu nguồn lực lớn hơn nhiều.\nĐiều này có ý nghĩa cho toàn bộ lĩnh vực phi lợi nhuận, gợi ý rằng các khoản đầu tư công nghệ nên được xem không chỉ là những cải tiến vận hành mà còn là những nhân tố nhân rộng sứ mệnh có thể tăng cường tác động tổ chức theo cấp số nhân. Chương trình AWS Imagine Grant và các sáng kiến tương tự đang giúp tạo ra một thế hệ phi lợi nhuận có hiểu biết về công nghệ hơn, có thể tận dụng dữ liệu và tự động hóa để phục vụ cộng đồng hiệu quả hơn.\nThước đo thành công cuối cùng không chỉ nằm ở những thành tựu kỹ thuật, mà còn ở cuộc đối thoại dân chủ được củng cố mà kết quả từ các hệ thống chính trị minh bạch và có trách nhiệm hơn. Bằng cách làm cho dữ liệu tài chính chính trị dễ tiếp cận, chính xác và có thể hành động hơn, OpenSecrets đang góp phần vào một công dân được thông tin tốt hơn và các thể chế dân chủ phản hồi tốt hơn.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/3-blogstranslated/3.3-blog3/",
	"title": "Blog 3",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nPhân tích vai trò dẫn dắt của AWS trong các báo cáo Gartner Magic Quadrant 2025 Khi tôi phân tích các bài viết gần đây của AWS nêu chi tiết việc họ được ghi nhận trong nhiều báo cáo Gartner Magic Quadrant, tôi tự hỏi điều gì thực sự cấu thành nên vị thế dẫn đầu về đám mây trong bối cảnh công nghệ thay đổi nhanh chóng ngày nay. Theo sát hành trình của AWS trong thập kỷ qua, tôi tin rằng hiệu suất ổn định của họ qua các đợt đánh giá này cho thấy nhiều hơn là vị thế thống trị thị trường—nó thể hiện sự thấu hiểu sâu sắc nhu cầu của doanh nghiệp trên nhiều lĩnh vực. Theo đánh giá của tôi, đạt vị trí “Leader” ở chỉ một Magic Quadrant đã là đáng chú ý, nhưng duy trì vị trí này trên năm hạng mục khác nhau đồng thời đứng cao nhất về “Ability to Execute” (Năng lực thực thi) đối với Strategic Cloud Platform Services trong suốt 15 năm liên tiếp là điều, theo tôi, chưa từng có tiền lệ trong ngành điện toán đám mây. Sự xuất sắc bền bỉ này cho thấy một văn hóa ăn sâu về lấy khách hàng làm trung tâm và đổi mới lan tỏa khắp tổ chức của họ.\nStrategic Cloud Platform Services: 15 năm dẫn đầu không gián đoạn Theo quan điểm của tôi, việc AWS được công nhận là “Leader” trong báo cáo Gartner Magic Quadrant 2025 cho Strategic Cloud Platform Services năm thứ mười lăm liên tiếp đại diện cho điều gì đó vượt xa một thành tựu doanh nghiệp. Tôi xem đó là sự xác tín cho triết lý nền tảng của họ—rằng điện toán đám mây phải đáng tin cậy, có khả năng mở rộng và an toàn theo mặc định. Sau khi đã đánh giá nhiều nền tảng đám mây trong suốt sự nghiệp, tôi đặc biệt ấn tượng với cách AWS duy trì vai trò dẫn dắt qua nhiều lần chuyển dịch mô hình công nghệ, từ thời kỳ máy ảo ban đầu đến kỷ nguyên điện toán không máy chủ (serverless) và AI tạo sinh hiện nay.\nĐiều khiến tôi chú ý nhất là vị trí cao nhất của họ trên trục “Ability to Execute”. Theo trải nghiệm của tôi, nhiều nhà cung cấp giỏi về tầm nhìn nhưng lại chật vật khi thực thi. Sự xuất sắc vận hành bền vững của AWS, theo tôi, bắt nguồn từ việc họ không ngừng tập trung vào nhu cầu khách hàng thay vì theo đuổi công nghệ vì chính công nghệ. Tôi đã quan sát thấy các khoản đầu tư vào silicon tự thiết kế (Graviton, Inferentia, Trainium) của họ trực tiếp giải quyết mối quan tâm thực tế về chi phí và hiệu năng, trong khi việc mở rộng hạ tầng toàn cầu luôn ưu tiên các yêu cầu về độ tin cậy và tuân thủ mà doanh nghiệp thật sự cần.\nKiến trúc giải pháp hiện tại như sau:\nContact Center as a Service: Chuyển đổi trải nghiệm khách hàng Khi xem xét việc AWS được công nhận là “Leader” trong Magic Quadrant cho Contact Center as a Service năm thứ ba liên tiếp, tôi ấn tượng với cách họ chuyển hóa hiệu năng đám mây thành năng lực chuyên biệt trong lĩnh vực dịch vụ khách hàng. Sau khi triển khai các giải pháp contact center cho nhiều tổ chức, tôi đánh giá cao cách Amazon Connect hiện thân triết lý cloud-native—loại bỏ việc quản trị hạ tầng đồng thời cung cấp khả năng mở rộng và linh hoạt vượt trội.\nĐiều đặc biệt khiến tôi ấn tượng là cách AWS tận dụng năng lực AI/ML để nâng cấp Amazon Connect. Theo góc nhìn của tôi, việc tích hợp các dịch vụ như Amazon Lex cho hội thoại AI và Amazon Connect Wisdom để hỗ trợ điện thoại viên cho thấy lợi thế độc đáo của AWS: khả năng đưa các năng lực AI tiên tiến vào những dịch vụ đã thành hình một cách liền mạch. Tôi tin rằng cách tiếp cận này—tăng cường chức năng cốt lõi bằng AI thay vì tách thành một dịch vụ riêng—đại diện cho tương lai phát triển phần mềm doanh nghiệp.\nCloud-Native Application Platforms: Trao quyền đổi mới cho lập trình viên Là người đã làm việc với nhiều nền tảng phát triển ứng dụng, tôi thấy vai trò dẫn dắt của AWS trong Magic Quadrant cho Cloud-Native Application Platforms đặc biệt thuyết phục. Vị trí cao nhất của họ trên trục “Ability to Execute”, theo đánh giá của tôi, phản ánh việc họ thấu hiểu rằng nhà phát triển cần cả những nguyên thủy mạnh mẽ (như AWS Lambda) lẫn các khung quản trị (như AWS Amplify) để xây dựng hiệu quả.\nĐiều tôi đánh giá cao nhất trong cách tiếp cận của AWS là nhận thức rằng không có một khuôn mẫu phù hợp cho tất cả trong phát triển ứng dụng. Chiến lược danh mục của họ—cung cấp mọi thứ từ dịch vụ container đến nền tảng serverless đến lưu trữ ứng dụng quản trị hoàn toàn—cho thấy, theo tôi, một sự thấu hiểu tinh tế về các mô hình phát triển khác nhau và mức độ trưởng thành tổ chức. Tôi đặc biệt ấn tượng với cách họ tích hợp năng lực AI tạo sinh thông qua Amazon Bedrock và Amazon SageMaker, giúp đưa AI tiên tiến vào các quy trình phát triển quen thuộc thay vì trở thành các dịch vụ tách rời.\nContainer Management: Tính linh hoạt và tầm nhìn Sau khi lăn lộn với thế giới điều phối container từ những ngày đầu, tôi cho rằng việc AWS được công nhận là “Leader” trong Magic Quadrant cho Container Management năm thứ ba liên tiếp là rất đáng kể. Vị trí xa nhất của họ trên trục “Completeness of Vision” phù hợp với trải nghiệm của tôi rằng AWS hiểu quản trị container là một phần của câu chuyện phát triển ứng dụng rộng hơn chứ không phải công nghệ cô lập.\nĐiều nổi bật với tôi là cách tiếp cận linh hoạt của AWS đối với quản trị container. Việc họ cung cấp cả Amazon ECS và Amazon EKS, được bổ trợ bởi động cơ tính toán serverless AWS Fargate, thể hiện—theo tôi—một cách tiếp cận lấy khách hàng làm trung tâm, công nhận các ưu tiên tổ chức và đầu tư sẵn có khác nhau. Tôi đặc biệt ấn tượng với năng lực hybrid và edge của họ, vốn thừa nhận rằng các triển khai ngoài đời thực thường trải rộng nhiều môi trường—một mức độ phức tạp mà nhiều nhà cung cấp khác, theo trải nghiệm của tôi, thường đánh giá thấp.\nDesktop as a Service: Không gian làm việc số an toàn Khi đánh giá vai trò dẫn dắt của AWS trong Magic Quadrant cho Desktop as a Service năm thứ hai liên tiếp, tôi ấn tượng với cách họ áp dụng chuyên môn đám mây vào các thách thức đặc thù của ảo hóa desktop. Sau khi triển khai các giải pháp DaaS trong nhiều ngành, tôi đánh giá cao cách Amazon WorkSpaces cân bằng yêu cầu bảo mật với trải nghiệm người dùng và tính linh hoạt.\nĐiều tôi thấy đặc biệt ấn tượng là cách AWS định giá DaaS. Mô hình trả theo mức sử dụng, theo trải nghiệm của tôi, mang lại lợi thế chi phí đáng kể cho các tổ chức có nhu cầu dao động. Ngoài ra, việc tích hợp với các dịch vụ bảo mật rộng hơn của AWS (như AWS IAM và AWS CloudTrail) tạo ra—theo đánh giá của tôi—tư thế bảo mật toàn diện hơn so với các nhà cung cấp DaaS độc lập thường có thể mang lại. Cách tiếp cận tích hợp này minh họa lợi thế then chốt của AWS theo tôi: khả năng tận dụng sức mạnh nền tảng rộng lớn để nâng cao từng dịch vụ riêng lẻ.\nNhững sợi chỉ chung: Cách AWS dẫn dắt đám mây Khi nhìn tổng thể các sự ghi nhận trong Magic Quadrant này, nhiều khuynh hướng nổi lên mà, theo tôi, lý giải việc AWS duy trì vị thế dẫn dắt trên nhiều lĩnh vực. Đầu tiên là sự ám ảnh nhất quán với khách hàng—mỗi đổi mới dường như đều xuất phát từ nhu cầu thực tế thay vì xu hướng công nghệ. Thứ hai là tư duy dài hạn, thể hiện qua các khoản đầu tư như silicon tùy biến, có thể chưa đem lại lợi ích ngay lập tức nhưng tạo ra lợi thế cạnh tranh bền vững.\nĐiều khiến tôi đặc biệt ấn tượng là cách tiếp cận cân bằng với đổi mới của AWS. Họ tiếp tục nâng cấp các dịch vụ hiện hữu đồng thời tiên phong những năng lực mới, duy trì khả năng tương thích ngược trong khi vẫn tiến lên. Cách tiếp cận này, theo trải nghiệm của tôi, mang lại cho doanh nghiệp sự tự tin để xây dựng trên AWS với niềm tin rằng các khoản đầu tư của họ sẽ được bảo vệ theo thời gian.\nHơn nữa, tôi quan sát thấy hạ tầng toàn cầu của AWS cung cấp nền tảng củng cố tất cả dịch vụ của họ. Các năng lực bảo mật, độ tin cậy và tuân thủ được xây dựng sẵn trong các khu vực toàn cầu mang lại lợi ích cho mọi dịch vụ từ tính toán đến container đến contact center, tạo ra các cộng hưởng mà các nhà cung cấp độc lập không thể sánh kịp.\nKết luận: Ý nghĩa của sự xuất sắc bền bỉ Theo đánh giá của tôi, hiệu suất của AWS qua các báo cáo Magic Quadrant này đại diện cho nhiều hơn một thành tựu doanh nghiệp—nó thể hiện năng lực thực thi nhất quán mà doanh nghiệp có thể dựa vào cho những chuyển đổi quan trọng nhất. Chuỗi 15 năm dẫn đầu ở Strategic Cloud Platform Services đặc biệt đáng chú ý, cho thấy sự xuất sắc bền bỉ qua nhiều lần chuyển dịch công nghệ và các bối cảnh cạnh tranh.\nĐiều khiến tôi chú ý nhất là AWS duy trì vị thế dẫn dắt đồng thời mở rộng sang các miền mới. Thay vì an phận với mảng tính toán cốt lõi, họ đã mở rộng năng lực sang các lĩnh vực như contact center, quản trị container và ảo hóa desktop, áp dụng chuyên môn đám mây để giải quyết các thách thức đặc thù theo miền.\nNhìn về tương lai, tôi tin rằng cách tiếp cận AI tích hợp của AWS—nhúng AI vào khắp các dịch vụ thay vì coi đó là một sản phẩm riêng—đặt họ vào vị thế tốt cho kỷ nguyên tiếp theo của điện toán đám mây. Khả năng tận dụng quy mô để đầu tư vào silicon tùy biến và hạ tầng toàn cầu trong khi vẫn giữ tập trung vào sự xuất sắc của từng dịch vụ riêng lẻ tiếp tục gây ấn tượng với tôi và, quan trọng hơn, mang lại giá trị hữu hình cho các doanh nghiệp phụ thuộc vào nền tảng của họ.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/3-blogstranslated/3.4-blog4/",
	"title": "Blog 4",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nAWS Amplify JavaScript Library Công Bố Bundle Nhẹ Hơn và Thời Gian Load Nhanh Hơn Thư Viện Amplify JavaScript Nhanh Hơn, Nhẹ Hơn AWS Amplify đã triển khai những cập nhật quan trọng cho thư viện JavaScript của mình, làm cho nó nhẹ hơn và hiệu quả hơn. Các danh mục chính như Auth, Storage, Notifications và Analytics đã thấy những cải thiện lớn về kích thước bundle, điều này trực tiếp dẫn đến thời gian tải nhanh hơn và hiệu suất tốt hơn cho các developer và người dùng của họ.\nNhững cải thiện này không chỉ là những điều chỉnh kỹ thuật—chúng là kết quả của việc lắng nghe cộng đồng developer Amplify. Bằng cách tập trung vào tối ưu hóa kích thước bundle và hỗ trợ tree-shaking tốt hơn, Amplify đang đảm bảo rằng các ứng dụng được xây dựng bằng thư viện này đáp ứng kỳ vọng hiệu suất hiện đại.\nTại Sao Kích Thước Bundle Lại Quan Trọng Đối với các developer JavaScript, mỗi kilobyte đều quan trọng. Bundle nhỏ hơn có nghĩa là ứng dụng tải nhanh hơn, phản hồi nhanh hơn và mang lại trải nghiệm người dùng tốt hơn. Amplify đã có một cách tiếp cận chiến lược để đáp ứng những nhu cầu này:\nTối Ưu Hóa AWS Service Clients – Các client cốt lõi kết nối với dịch vụ AWS đã được viết lại với tree-shaking trong tâm trí, đảm bảo rằng code không sử dụng được loại bỏ trong quá trình build. Giảm Dependencies – Bằng cách loại bỏ các thư viện bên thứ ba không cần thiết, Amplify đã giảm tổng dung lượng của các package. Tận Dụng Browser APIs – Các tính năng tích hợp như Fetch API hiện được sử dụng rộng rãi hơn, cắt giảm overhead từng làm phình to bundle. Việc kiểm soát sâu hơn toàn bộ stack Amplify cho phép thư viện được điều chỉnh cụ thể cho các framework và build tool phổ biến nhất được sử dụng ngày nay.\nGiảm Kích Thước Có Thể Đo Lường Kết quả của những thay đổi này rất đáng kể:\nAuth: nhỏ hơn 26% Notifications \u0026amp; Analytics: nhỏ hơn 59% Storage: nhỏ hơn 55% Những con số này đại diện cho kích thước bundle cuối cùng đã được minified và gzipped. Các phép đo \u0026ldquo;Trước\u0026rdquo; được lấy từ Amplify JavaScript v5.2.4, trong khi kết quả \u0026ldquo;Sau\u0026rdquo; phản ánh v5.3.4. Cả hai đều được đo bằng size-limit v8.2.6 và webpack 5.88.0 để đảm bảo tính nhất quán.\nNhìn Về Tương Lai: Tương Lai của Amplify JavaScript Trong khi những cải tiến hiện tại đã mang lại lợi ích đáng kể, team Amplify đã đặt ra một lộ trình đầy tham vọng cho tương lai. Các developer có thể mong đợi:\n1. Giảm Kích Thước Bundle Hơn Nữa Tối ưu hóa sẽ không dừng lại ở đây. Công việc bổ sung được lên kế hoạch để cắt giảm kích thước nhiều hơn nữa, đảm bảo ứng dụng tải nhanh nhất có thể trên tất cả thiết bị và mạng.\n2. Trải Nghiệm TypeScript Tốt Hơn Amplify sẽ đầu tư vào việc cải thiện năng suất developer với TypeScript, tập trung vào auto-complete phong phú hơn, hỗ trợ IntelliSense mạnh mẽ hơn trong IDE và trải nghiệm developer mượt mà hơn tổng thể. Đầu vào từ cộng đồng về những thay đổi này đang được thu thập thông qua RFC.\n3. Mở Rộng Hỗ Trợ Server-Side Rendering (SSR) Khi việc áp dụng SSR tăng trưởng trong hệ sinh thái web, Amplify đang chuẩn bị hỗ trợ một bộ framework và tool rộng hơn. Ngoài các tích hợp hiện có, hỗ trợ sắp tới sẽ bao gồm SolidJS, Astro và NuxtJS, mang lại sự linh hoạt hơn cho developer trong việc chọn stack phù hợp.\nĐược Xây Dựng Với Phản Hồi Từ Developer Những cải tiến này—và những cải tiến sắp tới—đều được định hình bởi phản hồi từ cộng đồng Amplify. Bằng cách hợp tác chặt chẽ với các developer, Amplify đang đảm bảo rằng thư viện JavaScript của mình phát triển theo cách cân bằng hiệu suất, khả năng sử dụng và xu hướng phát triển hiện đại.\nNhững cập nhật mới nhất chỉ là khởi đầu. Phiên bản chính tiếp theo của Amplify JavaScript sẽ đẩy những cải tiến này xa hơn nữa, mang lại ứng dụng nhanh hơn, công cụ tốt hơn và trải nghiệm phát triển mượt mà hơn trên toàn bộ.\nWhy Bundle Size Is So Important For JavaScript developers, every kilobyte matters. Smaller bundles mean apps load faster, feel more responsive, and deliver a better user experience. Amplify has taken a strategic approach to meet these needs:\nOptimized AWS Service Clients – The core clients that connect to AWS services were rewritten with tree-shaking in mind, ensuring that unused code is stripped out during builds. Reduced Dependencies – By removing unnecessary third-party libraries, Amplify has lowered the overall footprint of its packages. Leaning on Browser APIs – Built-in features like the Fetch API are now used more extensively, cutting out overhead that used to bloat bundles. This deeper control of the entire Amplify stack allows the library to be tuned specifically for the most common frameworks and build tools used today.\nMeasurable Reductions in Size The results of these changes are significant:\nAuth: 26% smaller Notifications \u0026amp; Analytics: 59% smaller Storage: 55% smaller These numbers represent the final minified and gzipped bundle sizes. The “Before” measurements were taken from Amplify JavaScript v5.2.4, while the “After” results reflect v5.3.4. Both were measured using size-limit v8.2.6 and webpack 5.88.0 for consistency.\nLooking Ahead: The Future of Amplify JavaScript While the current improvements already bring substantial benefits, the Amplify team has laid out an ambitious roadmap for the future. Developers can look forward to:\n1. Further Bundle Size Reductions Optimizations won’t stop here. Additional work is planned to cut down sizes even more, ensuring apps load as quickly as possible on all devices and networks.\n2. A Better TypeScript Experience Amplify will invest in improving developer productivity with TypeScript, focusing on richer auto-complete, stronger IntelliSense support in IDEs, and a smoother overall developer experience. Community input on these changes is being gathered through an RFC.\n3. Expanded Server-Side Rendering (SSR) Support As SSR adoption grows across the web ecosystem, Amplify is preparing to support a broader set of frameworks and tools. Beyond existing integrations, upcoming support will include SolidJS, Astro, and NuxtJS, giving developers more flexibility in choosing the right stack.\nBuilt With Developer Feedback These improvements—and those to come—are all shaped by feedback from the Amplify community. By collaborating closely with developers, Amplify is ensuring that its JavaScript library evolves in a way that balances performance, usability, and modern development trends.\nThe latest updates are just the beginning. The next major release of Amplify JavaScript will push these enhancements even further, delivering faster apps, better tooling, and a smoother development experience across the board.\nKhám Phá Kỹ Thuật Sâu: Cách Thức Hoạt Động Của Các Tối Ưu Hóa Hiểu về triển khai kỹ thuật đằng sau những cải tiến này cung cấp cái nhìn sâu sắc có giá trị về các chiến lược tối ưu hóa JavaScript hiện đại:\nTree-Shaking và Loại Bỏ Dead Code Kiến trúc mới của Amplify tận dụng các kỹ thuật tree-shaking tiên tiến hoạt động liền mạch với các bundler hiện đại như Webpack, Rollup và Vite. Thư viện hiện sử dụng ES modules với explicit exports, giúp bundler dễ dàng xác định và loại bỏ các đường dẫn code không sử dụng.\nCác cải tiến chính bao gồm:\nModular exports: Mỗi dịch vụ Amplify hiện được export như một module riêng biệt, cho phép developer chỉ import những gì họ cần Side-effect free functions: Các hàm quan trọng được đánh dấu là side-effect free, cho phép tối ưu hóa mạnh mẽ hơn Conditional loading: Các tính năng được tải có điều kiện dựa trên yêu cầu runtime Performance Benchmarks và Tác Động Thực Tế Việc giảm kích thước bundle dẫn đến những cải thiện hiệu suất có thể đo lường được trên các điều kiện mạng khác nhau:\nTrên mạng 3G:\nTải trang ban đầu cải thiện 15-30% cho các ứng dụng Auth-heavy Các hoạt động Storage cho thấy thời gian khởi tạo nhanh hơn 40% Các sự kiện Analytics kích hoạt sớm hơn 25% sau khi tải trang Trên thiết bị di động:\nGiảm thời gian phân tích JavaScript 20-35% Dung lượng bộ nhớ thấp hơn cải thiện hiệu suất trên các thiết bị hạn chế tài nguyên Tuổi thọ pin tốt hơn do giảm sử dụng CPU trong quá trình xử lý bundle Hướng Dẫn Migration và Best Practices Đối với các developer muốn nâng cấp lên thư viện Amplify JavaScript được tối ưu hóa, đây là chiến lược migration toàn diện:\nBước 1: Kiểm Tra Sử Dụng Hiện Tại Trước khi nâng cấp, hãy phân tích cách sử dụng Amplify hiện tại của bạn:\n// Pattern import cũ (ít tối ưu hơn) import Amplify from \u0026#39;aws-amplify\u0026#39;; // Pattern tối ưu mới import { Amplify } from \u0026#39;aws-amplify\u0026#39;; import { Auth } from \u0026#39;@aws-amplify/auth\u0026#39;; import { Storage } from \u0026#39;@aws-amplify/storage\u0026#39;; Bước 2: Cập Nhật Cấu Hình Build Đảm bảo các build tool của bạn được cấu hình để tree-shaking tối ưu:\n// webpack.config.js optimization module.exports = { optimization: { usedExports: true, sideEffects: false }, resolve: { mainFields: [\u0026#39;module\u0026#39;, \u0026#39;main\u0026#39;] } }; Bước 3: Triển Khai Progressive Loading Tận dụng khả năng lazy-loading mới của Amplify:\n// Tải tính năng theo yêu cầu const loadAuth = () =\u0026gt; import(\u0026#39;@aws-amplify/auth\u0026#39;); const loadStorage = () =\u0026gt; import(\u0026#39;@aws-amplify/storage\u0026#39;); // Sử dụng dynamic imports để code splitting tốt hơn if (userNeedsAuth) { const { Auth } = await loadAuth(); // Khởi tạo các tính năng auth } Bối Cảnh Ngành và Phân Tích Cạnh Tranh Sự tập trung của Amplify vào tối ưu hóa kích thước bundle phù hợp với xu hướng rộng lớn hơn của ngành hướng tới phát triển ưu tiên hiệu suất:\nSo Sánh Với Các Giải Pháp Khác Firebase JavaScript SDK (v9+):\nCách tiếp cận modular tương tự với giảm kích thước 40-60% Hỗ trợ tree-shaking được thêm vào trong các phiên bản gần đây Tập trung vào các metric hiệu suất web Auth0 SDK:\nDuy trì kích thước bundle lớn hơn nhưng thêm lazy loading Hỗ trợ TypeScript mạnh mẽ nhưng payload ban đầu nặng hơn Tập trung vào bảo mật hơn là tối ưu hóa bundle Lợi Thế của AWS Amplify:\nGiảm kích thước bundle mạnh mẽ nhất trên thị trường Tích hợp native với các dịch vụ AWS mà không có overhead bổ sung Trải nghiệm developer mạnh mẽ mà không ảnh hưởng đến hiệu suất Tiêu Chuẩn Hiệu Suất Web Những tối ưu hóa này giúp các ứng dụng Amplify đáp ứng yêu cầu Core Web Vitals:\nLargest Contentful Paint (LCP): Phân tích bundle nhanh hơn cải thiện điểm LCP First Input Delay (FID): Giảm thời gian thực thi JavaScript tăng cường tính tương tác Cumulative Layout Shift (CLS): Tải tài nguyên tốt hơn ngăn chặn layout shifts Tác Động Cộng Đồng và Việc Áp Dụng Phản hồi từ cộng đồng developer đã vô cùng tích cực:\nLời Chứng Thực Từ Developer Sarah Chen, Frontend Developer tại TechStart: \u0026ldquo;Những cải thiện về kích thước bundle đã là thay đổi đột phá cho người dùng di động của chúng tôi. Chúng tôi đã thấy cải thiện 25% trong tỷ lệ bounce kể từ khi nâng cấp lên phiên bản Amplify mới nhất.\u0026rdquo;\nMarcus Rodriguez, Full-Stack Engineer: \u0026ldquo;Những cải tiến TypeScript làm cho phát triển mượt mà hơn rất nhiều. IntelliSense thực sự hoạt động đáng tin cậy bây giờ, và các gợi ý auto-complete cực kỳ hữu ích.\u0026rdquo;\nĐóng Góp Open Source Team Amplify đã làm cho một số kỹ thuật tối ưu hóa có sẵn cho cộng đồng JavaScript rộng lớn hơn:\nCông cụ phân tích bundle được chia sẻ trên GitHub Framework kiểm thử hiệu suất được sử dụng nội bộ hiện đã open-source Tài liệu best practices cho tối ưu hóa thư viện JavaScript Thuyết Trình Hội Nghị và Workshop Các kỹ sư Amplify đã tích cực chia sẻ kỹ thuật tối ưu hóa của họ tại các hội nghị lớn:\nJSConf 2024: \u0026ldquo;Chiến Lược Tối Ưu Hóa Bundle Hiện Đại\u0026rdquo; AWS re:Invent 2024: \u0026ldquo;Xây Dựng Ứng Dụng Web Hiệu Suất Cao với Amplify\u0026rdquo; React Summit: \u0026ldquo;Tree-Shaking và Loại Bỏ Dead Code trong React Apps\u0026rdquo; Lộ Trình Tương Lai và Tầm Nhìn Dài Hạn Nhìn xa hơn những cải tiến hiện tại, tầm nhìn dài hạn của Amplify bao gồm một số mục tiêu đầy tham vọng:\nTích Hợp Edge Computing Hỗ Trợ WebAssembly:\nBiên dịch các hoạt động quan trọng về hiệu suất thành WebAssembly Mục tiêu thực thi nhanh hơn 50% cho các hoạt động mã hóa Hiệu suất tốt hơn trên các thiết bị hạn chế tài nguyên Tối Ưu Hóa Edge Runtime:\nTối ưu hóa cho Cloudflare Workers, Vercel Edge Functions Giảm thời gian cold start cho các ứng dụng serverless Tích hợp tốt hơn với các vị trí edge của CDN Cải Tiến Trải Nghiệm Developer Tích Hợp IDE:\nExtension VS Code với phân tích kích thước bundle thời gian thực Các công cụ profiling hiệu suất tích hợp Gợi ý tối ưu hóa tự động Tối Ưu Hóa Cụ Thể Cho Framework:\nPlugin Next.js cho code splitting tự động Module Nuxt.js với các tối ưu hóa SSR Adapter SvelteKit với tối ưu hóa compile-time Tính Năng Hiệu Suất Nâng Cao Caching Thông Minh:\nTải dự đoán dựa trên hành vi người dùng Tích hợp service worker cho hiệu suất offline Chiến lược caching nhận biết CDN Giám Sát Hiệu Suất Runtime:\nTích hợp giám sát người dùng thực Phát hiện tự động hiệu suất regression Framework A/B testing cho tối ưu hóa hiệu suất Bắt Đầu Với Amplify Được Tối Ưu Hóa Đối với các developer háo hức trải nghiệm những cải tiến này trực tiếp:\nChecklist Khởi Động Nhanh Cập Nhật Lên Phiên Bản Mới Nhất: npm install aws-amplify@latest Kiểm Tra Kích Thước Bundle: Sử dụng webpack-bundle-analyzer để đo lường cải tiến Cập Nhật Import Statements: Chuyển sang modular imports để tree-shaking tốt hơn Cấu Hình Build Tools: Đảm bảo cấu hình tree-shaking phù hợp Giám Sát Hiệu Suất: Thiết lập giám sát Core Web Vitals Tài Nguyên và Tài Liệu Hướng Dẫn Migration Chính Thức: Hướng dẫn nâng cấp từng bước Best Practices Hiệu Suất: Chiến lược tối ưu hóa toàn diện Diễn Đàn Cộng Đồng: Thảo luận tích cực và hỗ trợ từ các developer khác GitHub Repository: Truy cập mã nguồn và theo dõi vấn đề Thư viện Amplify JavaScript được tối ưu hóa đại diện cho một bước tiến đáng kể trong hiệu suất ứng dụng web. Bằng cách ưu tiên kích thước bundle, trải nghiệm developer và các metric hiệu suất thực tế, Amplify tiếp tục thiết lập tiêu chuẩn cho các framework phát triển JavaScript hiện đại.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/3-blogstranslated/3.5-blog5/",
	"title": "Blog 5",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nCộng Tác Multi-Agent với Strands Khi các hệ thống tự động phát triển, sự cộng tác giữa nhiều agent đang chuyển từ lý thuyết thành yếu tố thiết yếu. Khi các agent có được khả năng suy luận nâng cao, khả năng thích ứng và sử dụng công cụ, câu hỏi không còn là “Một agent có thể giải quyết một nhiệm vụ không?” mà là “Làm thế nào để nhiều agent có thể làm việc cùng nhau một cách hiệu quả?”\nChuyển Đổi Hướng Tới Hệ Thống Multi-Agent Mô hình Supervisor, được giới thiệu trong công trình trước đây về các AI agent bất đồng bộ với Amazon Bedrock, đã cung cấp bước đầu tiên theo hướng này. Hoạt động như một người điều phối tập trung, Supervisor quản lý các agent loosely coupled bằng cách ủy thác nhiệm vụ, xử lý fallback, và theo dõi trạng thái. Điều này cho phép các tổ chức tiến từ prototype single-agent đến các hệ thống multi-agent sơ khai.\nNhưng khi các hệ thống trở nên năng động hơn, những hạn chế của supervision tĩnh xuất hiện. Workflow thay đổi liên tục, khả năng mới nổi lên, và coordination phải thích ứng theo thời gian thực. Đây là lúc mô hình Arbiter xuất hiện—bước tiến hóa tiếp theo của orchestration agentic, được thiết kế cho coordination thích ứng, có thể mở rộng và nhận thức context.\nTừ Supervisor Đến Arbiter Mô hình Supervisor hoạt động tốt với workflow dự đoán được và các agent ổn định. Tuy nhiên, môi trường hiện đại đòi hỏi nhiều hơn: khả năng tạo agent động, match nhiệm vụ theo ngữ nghĩa, và phối hợp thông qua trạng thái chia sẻ.\nMô hình Arbiter mở rộng Supervisor với ba đổi mới cốt lõi:\nSemantic Capability Matching – Arbiter suy luận về loại agent cần thiết, ngay cả khi agent đó chưa tồn tại. Delegated Agent Creation – Khi không tìm thấy agent phù hợp, Arbiter gọi Fabricator agent để tạo agent mới một cách động. Task Planning với Contextual Memory – Nhiệm vụ được phân tách thành kế hoạch, theo dõi trong bộ nhớ, thử lại nếu cần, và đánh giá hiệu suất agent. Điều này chuyển đổi orchestration từ supervision tĩnh sang coordination thích ứng.\nMô Hình Blackboard Được Xem Xét Lại Mô hình Arbiter mượn các nguyên lý từ mô hình blackboard, một kiến trúc cổ điển từ AI phân tán. Trong cách tiếp cận này, các agent chia sẻ một workspace chung (\u0026ldquo;blackboard\u0026rdquo;), đăng các giải pháp một phần hoặc cập nhật. Các agent khác quan sát và phản ứng, thúc đẩy giải quyết vấn đề cộng tác.\nTrong triển khai của chúng tôi, blackboard trở thành một semantic event substrate:\nCác agent publish và consume các trạng thái liên quan đến nhiệm vụ. Arbiter phối hợp thông qua các semantic event này. Cộng tác trở thành event-driven và loosely coupled. Thiết kế này cho phép khả năng thích ứng ở quy mô lớn—nơi các agent không cần API cứng nhắc, chỉ cần khả năng phản ứng với trạng thái đang phát triển.\nCách Thức Hoạt Động Của Arbiter Arbiter tuân theo một workflow event-driven có cấu trúc:\nInterpretation – Một LLM diễn giải event, trích xuất mục tiêu và các sub-task.\nCapability Assessment – Arbiter đánh giá các agent có sẵn thông qua local index hoặc capability manifest.\nDelegation hoặc Generation –\nNếu agent tồn tại, nhiệm vụ được định tuyến trực tiếp. Nếu không có agent nào tồn tại, Arbiter yêu cầu Fabricator tạo một agent. Blackboard Coordination – Tất cả các agent tham gia đọc/ghi vào blackboard chia sẻ.\nReflection và Adaptation – Hiệu suất được ghi log và sử dụng để tinh chỉnh coordination tương lai hoặc kích hoạt tạo agent mới.\nArbiter vs Supervisor Supervisor: Orchestration dựa vào danh sách cấu hình tĩnh. Arbiter: Coordination thích ứng động thông qua blackboard ngữ nghĩa chia sẻ. Điều này cho phép điều chỉnh giữa nhiệm vụ, cộng tác phong phú hơn, và học tập liên tục.\nFabricator Agent: Tạo Khả Năng Theo Yêu Cầu Fabricator mở rộng khả năng thích ứng của Arbiter bằng cách tạo ra các agent mới khi những agent hiện có không thể xử lý một nhiệm vụ.\nCách Thức Hoạt Động Nhận yêu cầu khả năng từ Arbiter. Tạo mã worker agent mới sử dụng Strands. Lưu trữ agent trong S3 để sử dụng runtime. Đăng ký khả năng trong DynamoDB để có sẵn ngay lập tức. Publish agent mới vào hệ thống để orchestration. Cách tiếp cận này chuyển đổi hệ thống từ được lập trình trước thành tự mở rộng.\nGeneric Wrapper: Runtime Thực Thi Động Để chạy các agent mới này mà không cần cung cấp thêm infrastructure, Generic Wrapper cho phép hot-loading:\nCác agent được thực thi từ mã được lưu trữ trong S3. Một wrapper duy nhất dynamically load và thực thi mã agent. Kết quả được publish lại qua EventBridge để Arbiter theo dõi. Điều này tách biệt tăng trưởng agent khỏi mở rộng infrastructure, cho phép hàng trăm agent tồn tại mà không có bottleneck vận hành.\nLợi Ích Của Hot-Loading Có thể mở rộng: Hỗ trợ tạo agent không giới hạn. Hiệu quả: Tránh infrastructure mới cho mỗi agent. Chuẩn hóa: Tất cả agent giao tiếp thông qua cấu trúc event nhất quán. Có khả năng phục hồi: Lỗi được cô lập và xử lý một cách graceful. Workflow End-to-End Event nhận được → Arbiter diễn giải và phân tách nhiệm vụ. Kiểm tra khả năng → Tìm agent phù hợp hoặc yêu cầu Fabricator. Fabricator được gọi → Tạo agent mới nếu cần, đăng ký nó. Generic Wrapper thực thi → Hot-load và chạy mã agent. Blackboard chia sẻ được cập nhật → Các agent cộng tác qua semantic state. Reflection loop → Arbiter ghi log kết quả, thích ứng workflow tương lai. Khả Năng Chính Của Hệ Thống Arbiter Xử Lý Bất Đồng Bộ – Phân phối nhiệm vụ dựa trên SQS. Quản Lý Trạng Thái Bền Vững – Theo dõi workflow DynamoDB. Khả Năng Mở Rộng – Kiến trúc hot-loading hỗ trợ tăng trưởng agent vô tận. Orchestration Thông Minh – LLM phân tách nhiệm vụ và sắp xếp workflow. Khả Năng Tự Mở Rộng – Tạo agent dựa trên Strands theo yêu cầu. Giao Tiếp Chuẩn Hóa – Giao thức event-driven đảm bảo độ tin cậy. Kết Luận: Từ Supervision Đến Adaptation Mô hình Arbiter đại diện cho một bước nhảy vọt từ orchestration tĩnh hướng tới coordination thích ứng, generative và có khả năng phục hồi. Bằng cách kết hợp semantic reasoning, tạo agent động, và cộng tác dựa trên blackboard, nó chuyển đổi các hệ sinh thái agent thành hệ thống tự phát triển.\nNơi Supervisor mang lại cho chúng ta trật tự, Arbiter mang lại khả năng thích ứng—mở đường cho các hệ thống multi-agent phi tập trung, thông minh có thể học hỏi, thích ứng và cộng tác ở quy mô lớn.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/3-blogstranslated/3.6-blog6/",
	"title": "Blog 6",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTừ Linh Hoạt Đến Khung: Thực Thi Thứ Tự Công Cụ Trong MCP Servers The Model Context Protocol (MCP) được tạo ra nhằm mang lại tính nhất quán trong cách các ứng dụng tương tác với các mô hình AI sinh. Thay vì phải chắp vá từng tích hợp riêng lẻ cho mỗi mô hình hoặc môi trường lưu trữ, MCP cung cấp một lớp giao tiếp chuẩn hóa.\nGiới Thiệu: Tại Sao MCP Quan Trọng Model Context Protocol (MCP) được tạo ra để mang tính nhất quán vào cách các ứng dụng tương tác với các mô hình Generative AI. Thay vì ghép lại các tích hợp riêng biệt cho mỗi mô hình hoặc môi trường hosting, MCP cung cấp lớp giao tiếp chuẩn hóa.\nViệc chuẩn hóa này làm cho nó mạnh mẽ cho các ứng dụng AI, đặc biệt là những ứng dụng dựa vào agent sử dụng công cụ bên ngoài. Nhưng với sự linh hoạt này đi kèm một khoảng trống: MCP không tự nhiên thực thi trình tự mà các công cụ nên được sử dụng. Trong các tình huống như Infrastructure as Code (IaC), sự thiếu thứ tự này có thể dẫn đến thất bại workflow quan trọng.\nThách Thức: Tại Sao Thứ Tự Công Cụ Quan Trọng MCP cho phép một LLM (thông qua agent) gọi bất kỳ công cụ có sẵn nào—chẳng hạn như gửi email hoặc lấy dữ liệu thời tiết—mà không có hạn chế về thứ tự. Nhưng trong thực tế, nhiều công cụ có phụ thuộc.\nCác Tình Huống Phụ Thuộc Phổ Biến Chained calls – Một công cụ phải chạy trước công cụ khác.\nVí dụ: getOrderId() phải đứng trước getOrderDetail(). Ví dụ: fetch_weather_data() phải chạy trước send_email(). Hành Vi Mặc Định Của MCP – Tất cả công cụ hoạt động như các hàm độc lập. Framework không biết cái nào nên đến trước.\nĐiều này đặc biệt có vấn đề trong các quy trình có cấu trúc như CI/CD pipelines, nơi mọi giai đoạn phải chạy theo thứ tự nghiêm ngặt:\nMột pull request kích hoạt pipeline. Linting, unit tests, và security checks được chạy. Một lỗi dừng workflow ngay lập tức. Thêm vào đó hành vi không xác định của LLMs—nơi các prompt giống hệt nhau không luôn tạo ra output giống hệt nhau—và bạn thấy nhu cầu về một cơ chế để thực thi thứ tự mà không hy sinh sự linh hoạt.\nHiểu Về MCP Communication MCP định nghĩa ba giai đoạn lifecycle:\nInitialization – Client và server thỏa thuận phiên bản giao thức và khả năng. Operation – Client gọi công cụ và xử lý responses. Shutdown – Kết nối đóng một cách graceful. Trong initialization, MCP server chia sẻ các công cụ có sẵn, schema của chúng, và hướng dẫn sử dụng. Dữ liệu schema này cho phép AI agent học không chỉ những công cụ nào tồn tại, mà còn những input và output chúng mong đợi.\nVí dụ, một tool schema có thể yêu cầu một Result from get_aws_session_info() hoặc một security_scan_token. Bằng cách expose những yêu cầu này sớm, MCP tạo cơ hội để hướng dẫn workflows.\nGiải Pháp: Token-Based Orchestration Vì MCP không cung cấp phụ thuộc trực tiếp giữa các công cụ, CCAPI MCP server giới thiệu mô hình token messenger.\nThay vì các công cụ truyền thông tin cho nhau, server phát hành các token bảo mật cryptographic hoạt động như bằng chứng một phụ thuộc đã được thỏa mãn.\nCách Nó Hoạt Động 1. Enhanced Functions với @mcp.tool() Mọi công cụ được wrap với quy tắc validation input và định nghĩa schema. Tài liệu làm rõ ràng những gì mỗi công cụ yêu cầu. Ví dụ: generate_infrastructure_code() sẽ không chạy trừ khi một session_token hợp lệ được cung cấp. 2. Dependency Discovery Tại Initialization Server publish bản đồ phụ thuộc đầy đủ trong quá trình khởi động.\nAI agent học những tham số (và tokens) nào cần thiết trước khi một công cụ có thể chạy.\nVí dụ trình tự:\nget_aws_session_info() → generate_infrastructure_code() → run_checkov() → create_resource() 3. Server-Side Token Validation Tokens được lưu trữ trong memory (_workflow_store) và expire sau khi sử dụng. Công cụ consume tokens và tạo ra tokens mới, tạo thành một chuỗi. Nếu token bị thiếu, hết hạn, hoặc tái sử dụng, hoạt động thất bại ngay lập tức. Điều này đảm bảo công cụ tuân theo trình tự dự định mà không cần LLM \u0026ldquo;đoán\u0026rdquo; thứ tự đúng.\nVí Dụ Workflow get_aws_session_info() → tạo ra session_token. generate_infrastructure_code() → validate session_token, consume nó, và tạo generated_code_token. run_checkov() → yêu cầu generated_code_token, sau đó tạo ra security_scan_token. create_resource() → thực thi chỉ khi security_scan_token hợp lệ. Điều này tạo ra chuỗi cryptographic của trust thực thi tính toàn vẹn workflow.\nThách Thức và Hạn Chế 1. Quản Lý Session Tokens được gắn với sessions và reset khi sessions expire. Điều này phản ánh AWS credential expiration, phù hợp bảo mật với lifecycle workflow. 2. Concurrent Sessions Mỗi workflow chạy độc lập, tránh cross-contamination giữa các agent. 3. Persistence Tokens được gắn với memory vì bảo mật. Persistent storage có thể nhưng thường không cần thiết, vì tokens được thiết kế ngắn hạn. Nhìn Về Phía Trước: Tương Lai Của MCP Trong khi token orchestration hoạt động ngày nay, giao thức MCP có thể phát triển để hỗ trợ workflows deterministic một cách tự nhiên hơn.\nSchema-Defined Dependencies\n@mcp.tool(depends_on=[\u0026#34;run_checkov\u0026#34;]) Lifecycle Hooks – Tương tự như hooks của Claude Code, những hooks này sẽ thực thi thứ tự được đảm bảo bên trong framework.\nĐối với IaC, CI/CD, và các domain deterministic khác, những cải tiến này sẽ thiết yếu cho việc áp dụng ở quy mô.\nKết Luận Điểm mạnh của MCP nằm ở sự linh hoạt của nó, nhưng các workflow enterprise phức tạp yêu cầu tính dự đoán và kiểm soát.\nBằng cách thêm token-based orchestration vào CCAPI MCP server:\nThực thi thứ tự công cụ nghiêm ngặt. Bảo mật workflows với validation server-side. Giữ kiến trúc linh hoạt của MCP. Cách tiếp cận này cho thấy MCP có thể chuyển từ linh hoạt đến framework—hỗ trợ cả đổi mới và độ tin cậy nghiêm ngặt được yêu cầu cho quản lý cloud infrastructure.\nCâu chuyện của MCP vẫn đang diễn ra, nhưng token-based orchestration cung cấp một con đường rõ ràng phía trước: từ thử nghiệm đến operations enterprise-grade.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.4-s3-onprem/5.4.1-prepare/",
	"title": "Chuẩn bị tài nguyên",
	"tags": [],
	"description": "",
	"content": "Để chuẩn bị cho phần này của workshop, bạn sẽ cần phải:\nTriển khai CloudFormation stack Sửa đổi bảng định tuyến VPC. Các thành phần này hoạt động cùng nhau để mô phỏng DNS forwarding và name resolution.\nTriển khai CloudFormation stack Mẫu CloudFormation sẽ tạo các dịch vụ bổ sung để hỗ trợ mô phỏng môi trường truyền thống:\nMột Route 53 Private Hosted Zone lưu trữ các bản ghi Bí danh (Alias records) cho điểm cuối PrivateLink S3 Một Route 53 Inbound Resolver endpoint cho phép \u0026ldquo;VPC Cloud\u0026rdquo; giải quyết các yêu cầu resolve DNS gửi đến Private Hosted Zone Một Route 53 Outbound Resolver endpoint cho phép \u0026ldquo;VPC On-prem\u0026rdquo; chuyển tiếp các yêu cầu DNS cho S3 sang \u0026ldquo;VPC Cloud\u0026rdquo; Click link sau để mở AWS CloudFormation console. Mẫu yêu cầu sẽ được tải sẵn vào menu. Chấp nhận tất cả mặc định và nhấp vào Tạo stack. Có thể mất vài phút để triển khai stack hoàn tất. Bạn có thể tiếp tục với bước tiếp theo mà không cần đợi quá trình triển khai kết thúc.\nCập nhật bảng định tuyến private on-premise Workshop này sử dụng StrongSwan VPN chạy trên EC2 instance để mô phỏng khả năng kết nối giữa trung tâm dữ liệu truyền thống và môi trường cloud AWS. Hầu hết các thành phần bắt buộc đều được cung cấp trước khi bạn bắt đầu. Để hoàn tất cấu hình VPN, bạn sẽ sửa đổi bảng định tuyến \u0026ldquo;VPC on-prem\u0026rdquo; để hướng lưu lượng đến cloud đi qua StrongSwan VPN instance.\nMở Amazon EC2 console\nChọn instance tên infra-vpngw-test. Từ Details tab, copy Instance ID và paste vào text editor của bạn để sử dụng ở những bước tiếp theo\nĐi đến VPC menu bằng cách gõ \u0026ldquo;VPC\u0026rdquo; vào Search box\nClick vào Route Tables, chọn RT Private On-prem route table, chọn Routes tab, và click Edit Routes.\nClick Add route. Destination: CIDR block của Cloud VPC Target: ID của infra-vpngw-test instance (bạn đã lưu lại ở bước trên) Click Save changes "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/4-eventparticipated/4.1-event1/",
	"title": "Event 1",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBài thu hoạch “Vietnam Cloud Day 2025 : Ho Chi Minh City Connect Edition for Builders” Mục Đích Của Sự Kiện Khám phá các chiến lược di chuyển \u0026amp; hiện đại hóa đám mây cho doanh nghiệp Giới thiệu các công cụ hỗ trợ AI tạo sinh cho nhà phát triển và doanh nghiệp Thảo luận các chiến lược lãnh đạo điều hành để điều hướng sự gián đoạn của AI Chia sẻ các thực hành tốt nhất về bảo mật đám mây, khả năng mở rộng và vận hành Danh Sách Diễn Giả Eric Yeo – Country General Manager, Vietnam, Cambodia, Laos \u0026amp; Myanmar, AWS Dr. Jens Lottner – CEO, Techcombank Ms. Trang Phung – CEO \u0026amp; Co-Founder, U2U Network Jaime Valles – Vice President, General Manager Asia Pacific and Japan, AWS Jeff Johnson – Managing Director, ASEAN, AWS Vu Van – Co-founder \u0026amp; CEO, ELSA Corp Nguyen Hoa Binh – Chairman, Nexttech Group Dieter Botha – CEO, TymeX Nội Dung Nổi Bật Bài phát biểu chính của điều hành \u0026amp; khách hàng Tầm nhìn \u0026amp; chiến lược AWS: Đám mây như động lực tăng trưởng cho nền kinh tế số Việt Nam Câu chuyện thành công của khách hàng: Techcombank và U2U Network chia sẻ hành trình áp dụng đám mây và đổi mới với AI Thảo luận nhóm: Định hướng cuộc cách mạng GenAI Góc nhìn lãnh đạo: Làm thế nào để căn chỉnh các sáng kiến AI với mục tiêu kinh doanh Xây dựng văn hóa: Khuyến khích đổi mới và quản lý thay đổi tổ chức Quản trị: Cân bằng việc thử nghiệm với tuân thủ và quản lý rủi ro Di chuyển \u0026amp; hiện đại hóa quy mô lớn Bài học từ hàng nghìn lần di chuyển:\nMô hình tư duy để giảm thiểu rủi ro chuyển đổi Các con đường hiện đại hóa (rehost, replatform, refactor) Nghiên cứu tình huống thực tế từ Techcombank Hiện đại hóa ứng dụng với AI tạo sinh Amazon Q Developer được giới thiệu như một cộng tác viên AI trong toàn bộ SDLC Các khả năng chính: Tự động tạo mã, tạo test, đề xuất tối ưu hóa, và cải thiện tư thế bảo mật Hội thảo hiện đại hóa ứng dụng Các chuyên gia từ OCB, LPBank Securities, Ninety Eight thảo luận về:\nSự linh hoạt kinh doanh thông qua hiện đại hóa Các thực hành tốt nhất để quản lý hệ thống kế thừa Thách thức áp dụng và các yếu tố thành công Bảo mật \u0026amp; vận hành Bảo mật đám mây được tăng cường bởi AI: Phát hiện mối đe dọa, tự động khắc phục Nguyên tắc không tin tưởng (zero-trust) được áp dụng từ môi trường phát triển đến sản xuất Những điểm chính rút ra Kinh doanh \u0026amp; chiến lược AI hiện đã trở thành chủ đề cấp ban lãnh đạo — lãnh đạo phải đặt ra các mục tiêu kinh doanh rõ ràng phù hợp Tư duy ưu tiên di chuyển: Đặt nền tảng vững chắc trước khi hiện đại hóa sâu Công nghệ \u0026amp; kiến trúc Kiến trúc hướng sự kiện (event-driven) và microservices là tương lai của các hệ thống có khả năng mở rộng Cách tiếp cận ưu tiên tự động hóa đối với bảo mật, chất lượng mã và vận hành Lộ trình VMware-to-AWS cho việc chuyển đổi đám mây hiệu quả về chi phí Con người \u0026amp; văn hóa Xây dựng văn hóa thử nghiệm nhưng vẫn giữ các rào cản để tuân thủ Nâng cấp kỹ năng cho các nhóm để sử dụng công cụ AI hiệu quả (Amazon Q Developer, quy trình hỗ trợ LLM) Áp dụng vào công việc Kiểm tra các khối lượng công việc hiện có để xác định những cải thiện nhanh chóng cho hiện đại hóa Giới thiệu thiết kế hướng sự kiện ở những nơi có thể để cải thiện khả năng mở rộng Thử nghiệm Amazon Q Developer cho tài liệu, tạo test và đánh giá mã Tăng cường tư thế bảo mật với các dịch vụ bảo mật AWS và giám sát hỗ trợ AI Sử dụng thông tin từ các hội thảo để thúc đẩy sự thống nhất nội bộ về chiến lược AI và đám mây Trải nghiệm sự kiện Tham dự \u0026ldquo;Connect Edition for Builders\u0026rdquo; tại Thành phố Hồ Chí Minh mang lại cả chiều sâu chiến lược và kỹ thuật:\nHọc hỏi từ các nhà lãnh đạo Lắng nghe trực tiếp từ lãnh đạo khu vực AWS về vai trò của đám mây trong sự tăng trưởng của Việt Nam Thu được góc nhìn cấp CEO về việc cân bằng đổi mới với rủi ro Ứng dụng công cụ hiện đại Tìm hiểu sâu về các bộ gia tốc di chuyển AWS, các mẫu hiện đại hóa EKS, và chiến lược ưu tiên serverless Demo thực tế về Amazon Q Developer cải thiện hiệu quả vòng đời mã Kết nối và trao đổi Tương tác với các nhà lãnh đạo công nghệ từ ngân hàng, startup và các công ty cloud-native Chia sẻ các thực hành tốt nhất với đồng nghiệp về hiện đại hóa ứng dụng và áp dụng GenAI Bài học rút ra Hiện đại hóa là một hành trình: theo từng giai đoạn, có thể đo lường được, và được thúc đẩy bởi kinh doanh AI tạo sinh là một yếu tố nhân lực lượng — không chỉ cho mã nguồn, mà còn cho tài liệu, kiểm thử và bảo mật Bảo mật theo thiết kế phải được nhúng sớm, không phải được gắn thêm sau Một số hình ảnh khi tham gia sự kiện "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/4-eventparticipated/4.2-event2/",
	"title": "Event 2",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBài thu hoạch “GenAI-powered App-DB Modernization workshop” Mục Đích Của Sự Kiện Chia sẻ best practices trong thiết kế ứng dụng hiện đại Giới thiệu phương pháp DDD và event-driven architecture Hướng dẫn lựa chọn compute services phù hợp Giới thiệu công cụ AI hỗ trợ development lifecycle Danh Sách Diễn Giả Jignesh Shah - Director, Open Source Databases Erica Liu - Sr. GTM Specialist, AppMod Fabrianne Effendi - Assc. Specialist SA, Serverless Amazon Web Services Nội Dung Nổi Bật Đưa ra các ảnh hưởng tiêu cực của kiến trúc ứng dụng cũ Thời gian release sản phẩm lâu → Mất doanh thu/bỏ lỡ cơ hội Hoạt động kém hiệu quả → Mất năng suất, tốn kém chi phí Không tuân thủ các quy định về bảo mật → Mất an ninh, uy tín Chuyển đổi sang kiến trúc ứng dụng mới - Microservice Architecture Chuyển đổi thành hệ thống modular – từng chức năng là một dịch vụ độc lập giao tiếp với nhau qua sự kiện với 3 trụ cột cốt lõi:\nQueue Management: Xử lý tác vụ bất đồng bộ Caching Strategy: Tối ưu performance Message Handling: Giao tiếp linh hoạt giữa services Domain-Driven Design (DDD) Phương pháp 4 bước: Xác định domain events → sắp xếp timeline → identify actors → xác định bounded contexts Case study bookstore: Minh họa cách áp dụng DDD thực tế Context mapping: 7 patterns tích hợp bounded contexts Event-Driven Architecture 3 patterns tích hợp: Publish/Subscribe, Point-to-point, Streaming Lợi ích: Loose coupling, scalability, resilience So sánh sync vs async: Hiểu rõ trade-offs (sự đánh đổi) Compute Evolution Shared Responsibility Model: Từ EC2 → ECS → Fargate → Lambda Serverless benefits: No server management, auto-scaling, pay-for-value Functions vs Containers: Criteria lựa chọn phù hợp Amazon Q Developer SDLC automation: Từ planning đến maintenance Code transformation: Java upgrade, .NET modernization AWS Transform agents: VMware, Mainframe, .NET migration Những Gì Học Được Tư Duy Thiết Kế Business-first approach: Luôn bắt đầu từ business domain, không phải technology Ubiquitous language: Importance của common vocabulary giữa business và tech teams Bounded contexts: Cách identify và manage complexity trong large systems Kiến Trúc Kỹ Thuật Event storming technique: Phương pháp thực tế để mô hình hóa quy trình kinh doanh Sử dụng Event-driven communication thay vì synchronous calls Integration patterns: Hiểu khi nào dùng sync, async, pub/sub, streaming Compute spectrum: Criteria chọn từ VM → containers → serverless Chiến Lược Hiện Đại Hóa Phased approach: Không rush, phải có roadmap rõ ràng 7Rs framework: Nhiều con đường khác nhau tùy thuộc vào đặc điểm của mỗi ứng dụng ROI measurement: Cost reduction + business agility Ứng Dụng Vào Công Việc Áp dụng DDD cho project hiện tại: Event storming sessions với business team Refactor microservices: Sử dụng bounded contexts để identify service boundaries Implement event-driven patterns: Thay thế một số sync calls bằng async messaging Serverless adoption: Pilot AWS Lambda cho một số use cases phù hợp Try Amazon Q Developer: Integrate vào development workflow để boost productivity Trải nghiệm trong event Tham gia workshop “GenAI-powered App-DB Modernization” là một trải nghiệm rất bổ ích, giúp tôi có cái nhìn toàn diện về cách hiện đại hóa ứng dụng và cơ sở dữ liệu bằng các phương pháp và công cụ hiện đại. Một số trải nghiệm nổi bật:\nHọc hỏi từ các diễn giả có chuyên môn cao Các diễn giả đến từ AWS và các tổ chức công nghệ lớn đã chia sẻ best practices trong thiết kế ứng dụng hiện đại. Qua các case study thực tế, tôi hiểu rõ hơn cách áp dụng Domain-Driven Design (DDD) và Event-Driven Architecture vào các project lớn. Trải nghiệm kỹ thuật thực tế Tham gia các phiên trình bày về event storming giúp tôi hình dung cách mô hình hóa quy trình kinh doanh thành các domain events. Học cách phân tách microservices và xác định bounded contexts để quản lý sự phức tạp của hệ thống lớn. Hiểu rõ trade-offs giữa synchronous và asynchronous communication cũng như các pattern tích hợp như pub/sub, point-to-point, streaming. Ứng dụng công cụ hiện đại Trực tiếp tìm hiểu về Amazon Q Developer, công cụ AI hỗ trợ SDLC từ lập kế hoạch đến maintenance. Học cách tự động hóa code transformation và pilot serverless với AWS Lambda, từ đó nâng cao năng suất phát triển. Kết nối và trao đổi Workshop tạo cơ hội trao đổi trực tiếp với các chuyên gia, đồng nghiệp và team business, giúp nâng cao ngôn ngữ chung (ubiquitous language) giữa business và tech. Qua các ví dụ thực tế, tôi nhận ra tầm quan trọng của business-first approach, luôn bắt đầu từ nhu cầu kinh doanh thay vì chỉ tập trung vào công nghệ. Bài học rút ra Việc áp dụng DDD và event-driven patterns giúp giảm coupling, tăng scalability và resilience cho hệ thống. Chiến lược hiện đại hóa cần phased approach và đo lường ROI, không nên vội vàng chuyển đổi toàn bộ hệ thống. Các công cụ AI như Amazon Q Developer có thể boost productivity nếu được tích hợp vào workflow phát triển hiện tại. Một số hình ảnh khi tham gia sự kiện Thêm các hình ảnh của các bạn tại đây Tổng thể, sự kiện không chỉ cung cấp kiến thức kỹ thuật mà còn giúp tôi thay đổi cách tư duy về thiết kế ứng dụng, hiện đại hóa hệ thống và phối hợp hiệu quả hơn giữa các team.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.1-workshop-overview/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Giới thiệu về VPC Endpoint Điểm cuối VPC (endpoint) là thiết bị ảo. Chúng là các thành phần VPC có thể mở rộng theo chiều ngang, dự phòng và có tính sẵn sàng cao. Chúng cho phép giao tiếp giữa tài nguyên điện toán của bạn và dịch vụ AWS mà không gây ra rủi ro về tính sẵn sàng. Tài nguyên điện toán đang chạy trong VPC có thể truy cập Amazon S3 bằng cách sử dụng điểm cuối Gateway. Interface Endpoint PrivateLink có thể được sử dụng bởi tài nguyên chạy trong VPC hoặc tại TTDL. Tổng quan về workshop Trong workshop này, bạn sẽ sử dụng hai VPC.\n\u0026ldquo;VPC Cloud\u0026rdquo; dành cho các tài nguyên cloud như Gateway endpoint và EC2 instance để kiểm tra. \u0026ldquo;VPC On-Prem\u0026rdquo; mô phỏng môi trường truyền thống như nhà máy hoặc trung tâm dữ liệu của công ty. Một EC2 Instance chạy phần mềm StrongSwan VPN đã được triển khai trong \u0026ldquo;VPC On-prem\u0026rdquo; và được cấu hình tự động để thiết lập đường hầm VPN Site-to-Site với AWS Transit Gateway. VPN này mô phỏng kết nối từ một vị trí tại TTDL (on-prem) với AWS cloud. Để giảm thiểu chi phí, chỉ một phiên bản VPN được cung cấp để hỗ trợ workshop này. Khi lập kế hoạch kết nối VPN cho production workloads của bạn, AWS khuyên bạn nên sử dụng nhiều thiết bị VPN để có tính sẵn sàng cao. "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/",
	"title": "Nhật ký công việc",
	"tags": [],
	"description": "",
	"content": "Trong trang này bạn sẽ cần giới thiệu worklog của bạn như thế nào? Bạn hoàn thành chương trình trong vòng bao nhiêu tuần? Bạn đã làm gì trong các tuần đó?\nThông thường và cũng là tiêu chuẩn, một worklog được thực hiện trong khoảng 3 tháng (trong suốt thời gian thực tập) với nội dung các tuần như sau:\nTuần 1: Làm quen với AWS và các dịch vụ cơ bản trong AWS\nTuần 2: Làm công việc A\u0026hellip;\nTuần 3: Làm công việc B\u0026hellip;\nTuần 4: Làm công việc C\u0026hellip;\nTuần 5: Làm công việc D\u0026hellip;\nTuần 6: Làm công việc E\u0026hellip;\nTuần 7: Làm công việc G\u0026hellip;\nTuần 8: Làm công việc H\u0026hellip;\nTuần 9: Làm công việc I\u0026hellip;\nTuần 10: Làm công việc L\u0026hellip;\nTuần 11: Làm công việc M\u0026hellip;\nTuần 12: Làm công việc N\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.3-s3-vpc/5.3.1-create-gwe/",
	"title": "Tạo một Gateway Endpoint",
	"tags": [],
	"description": "",
	"content": " Mở Amazon VPC console Trong thanh điều hướng, chọn Endpoints, click Create Endpoint: Bạn sẽ thấy 6 điểm cuối VPC hiện có hỗ trợ AWS Systems Manager (SSM). Các điểm cuối này được Mẫu CloudFormation triển khai tự động cho workshop này.\nTrong Create endpoint console: Đặt tên cho endpoint: s3-gwe Trong service category, chọn aws services Trong Services, gõ \u0026ldquo;s3\u0026rdquo; trong hộp tìm kiếm và chọn dịch vụ với loại gateway Đối với VPC, chọn VPC Cloud từ drop-down menu. Đối với Route tables, chọn bảng định tuyến mà đã liên kết với 2 subnets (lưu ý: đây không phải là bảng định tuyến chính cho VPC mà là bảng định tuyến thứ hai do CloudFormation tạo). Đối với Policy, để tùy chọn mặc định là Full access để cho phép toàn quyền truy cập vào dịch vụ. Bạn sẽ triển khai VPC endpoint policy trong phần sau để chứng minh việc hạn chế quyền truy cập vào S3 bucket dựa trên các policies. Không thêm tag vào VPC endpoint. Click Create endpoint, click x sau khi nhận được thông báo tạo thành công. "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.1-week1/",
	"title": "Worklog Tuần 1",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 1: Làm quen với các thành viên First Cloud Journey. Ghi chú về quy định FCJ và các công nghệ AWS cơ bản cùng Spring Boot. Các công việc cần thực hiện trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Tài liệu tham khảo 2 - Làm quen với các thành viên FCJ - Đọc và ghi chú quy định, nội quy tại đơn vị thực tập 09/08/2025 09/08/2025 3 - Tạo tài khoản AWS và cài đặt INTELJI cho Spring Boot 09/09/2025 09/09/2025 4 - Tìm hiểu các dịch vụ AWS cơ bản:\n+ Database\n+ EC2 - Tìm hiểu các cổng RESTFUL API đơn giản trong Spring Boot:\n+ POST\n+ GET\n+ PATCH(PUT) + DELETE 09/10/2025 09/10/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu cách kiểm soát chi phí trên AWS để tránh lãng phí và tìm hiểu về phụ thuộc Microsoft SQL Server trong Spring Boot 09/11/2025 09/11/2025 https://cloudjourney.awsstudygroup.com/ 6 Thực hành:\n+ Khởi tạo một EC2 instance bằng AWS Management Console.\n+ Cấu hình loại máy, AMI, key pair, và security group.\n+ Thực hành với EC2 và các khái niệm EBS. 09/12/2025 09/12/2025 https://cloudjourney.awsstudygroup.com/ Thành tựu tuần 1: Hiểu AWS là gì và nắm được các dịch vụ cơ bản: Lưu trữ (Storage) Mạng (Networking) Cơ sở dữ liệu (Database) Đã tạo và cấu hình tài khoản AWS, cũng như cài đặt INTELJI cho Spring Boot. Làm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ qua giao diện web. Đã xây dựng một dự án Spring Boot đơn giản để làm quen với API "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.2-week2/",
	"title": "Worklog Tuần 2",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 2: Thảo luận và thống nhất ý tưởng/phạm vi dự án cùng nhóm. Lựa chọn ngôn ngữ lập trình/ngăn xếp công nghệ cho dự án. Học MS SQL cơ bản (cài đặt, lược đồ/bảng, CRUD, truy vấn đơn giản). Thực hành cài đặt dependency và thiết lập môi trường dự án. Các công việc cần triển khai trong tuần này: Ngày Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 1 - Tổng quan bảo mật: bộ ba CIA, các mối đe dọa phổ biến, thuật ngữ cơ bản 09/15/2025 09/15/2025 2 - Làm quen với các thành viên FCJ - Đọc và ghi chú nội quy, quy định của đơn vị thực tập - Thảo luận nhóm: ý tưởng \u0026amp; phạm vi dự án - Chọn ngôn ngữ/ngăn xếp công nghệ - Nền tảng bảo mật: xác thực vs ủy quyền, least privilege, MFA, thói quen mật khẩu 09/16/2025 09/16/2025 3 - Học các khái niệm bảo mật cốt lõi (Bảo mật mạng): + Kiến thức TCP/IP \u0026amp; cổng phổ biến + Cơ bản về tường lửa và VPN + Tổng quan IDS/IPS + Phân đoạn mạng 09/17/2025 09/17/2025 4 - Công cụ \u0026amp; thực hành bảo mật: + Cơ bản hardening hệ điều hành (Windows/Linux) + Cấu hình tường lửa/antivirus cục bộ + Thiết lập trình quản lý mật khẩu - Thực hành (Java): + Quản lý dependency an toàn với Maven/Gradle (pin version, kiểm tra checksum) + Khởi tạo khung xương dự án Java + Dùng application.properties/.yaml cho cấu hình và không commit bí mật (gitignore) 09/18/2025 09/18/2025 5 - Nền tảng bảo mật cơ sở dữ liệu: + Nguyên tắc đặc quyền tối thiểu (vai trò/quyền) + Phòng chống SQL injection (truy vấn tham số hóa) + Mã hóa khi truyền/tồn trữ cơ bản + Thiết kế ERD đơn giản có xét đến bảo mật 09/19/2025 09/19/2025 6 - Thực hành (secure coding, Java): + Thêm driver JDBC MS SQL (mssql-jdbc) và cấu hình DataSource + Thêm JPA/Hibernate hoặc MyBatis và hiện thực CRUD tham số hóa + Xác thực đầu vào (Jakarta Validation) \u0026amp; xử lý ngoại lệ + Quản lý bí mật (biến môi trường/thuộc tính hệ thống; không đưa bí mật vào mã nguồn) + Phân tích tĩnh/định dạng: SpotBugs, Checkstyle (hoặc SonarLint); ghi lại phát hiện 09/19/2025 09/19/2025 Kết quả đạt được tuần 2: Đã thống nhất ý tưởng/phạm vi dự án và chọn ngôn ngữ/ngăn xếp công nghệ (Java).\nĐã học MS SQL cơ bản:\nCài đặt và thiết lập môi trường (ví dụ: SQL Server/SSMS hoặc công cụ tương đương) Tạo cơ sở dữ liệu và bảng Viết truy vấn CRUD cơ bản và JOIN đơn giản Đã thực hành quản lý dependency cho Java; khởi tạo skeleton dự án; cấu hình kết nối MS SQL an toàn (chuỗi kết nối qua biến môi trường); thêm driver JDBC và ORM.\nĐã áp dụng các nguyên tắc bảo mật nền tảng: xác thực/ủy quyền, nguyên tắc đặc quyền tối thiểu, quản lý bí mật; chạy phân tích tĩnh với SpotBugs/Checkstyle/SonarLint và ghi nhận phát hiện.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.3-week3/",
	"title": "Worklog Tuần 3",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 3: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Ôn lại React và các component cơ bản + Functional Components + Class Components + Props và State + Event Handling + Component Lifecycle 09/23/2025 09/23/2025 3 - Học TypeScript về interface, type, class + Khai báo interface và type aliases + Generic types + Union và intersection types + Class inheritance và access modifiers 09/24/2025 09/24/2025 4 - Học TypeScript về data tĩnh và các khái niệm liên quan + Static properties và methods + Readonly properties + Enum types + Utility types (Partial, Required, Pick) 09/25/2025 09/25/2025 5 - Thảo luận về dự án bán quần áo tên FFF + Phân tích requirements và user stories + Thiết kế UI/UX mockup + Lựa chọn tech stack cho frontend + Planning sprint và timeline 09/26/2025 09/26/2025 6 - Được phân công làm frontend cho dự án FFF + Setup development environment + Khởi tạo React project với TypeScript + Cài đặt dependencies cần thiết + Tạo component structure cơ bản 09/26/2025 09/26/2025 Kết quả đạt được tuần 3: Ôn tập React thành công:\nNắm vững Functional Components và Class Components Hiểu rõ cách sử dụng Props và State management Thành thạo Event Handling trong React Nắm được Component Lifecycle và các hooks cơ bản Học TypeScript cơ bản:\nKhai báo và sử dụng interface, type aliases Hiểu và áp dụng Generic types Nắm vững Union và intersection types Sử dụng Class inheritance và access modifiers Nâng cao kiến thức TypeScript:\nSử dụng Static properties và methods Hiểu Readonly properties và immutability Làm việc với Enum types Áp dụng Utility types (Partial, Required, Pick) Tham gia dự án FFF:\nPhân tích được requirements và user stories Tham gia thiết kế UI/UX mockup Đóng góp ý kiến cho việc lựa chọn tech stack frontend Lên kế hoạch sprint và timeline chi tiết Chuẩn bị môi trường phát triển:\nSetup development environment hoàn chỉnh Khởi tạo React project với TypeScript configuration Cài đặt và cấu hình các dependencies cần thiết Tạo component structure và folder organization Sẵn sàng bắt đầu phát triển frontend cho dự án FFF "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.4-week4/",
	"title": "Worklog Tuần 4",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 4: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 4: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.5-week5/",
	"title": "Worklog Tuần 5",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 5: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 5: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.6-week6/",
	"title": "Worklog Tuần 6",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 6: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 6: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.7-week7/",
	"title": "Worklog Tuần 7",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 7: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 7: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.8-week8/",
	"title": "Worklog Tuần 8",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 8: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 8: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.9-week9/",
	"title": "Worklog Tuần 9",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 9: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 9: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/2-proposal/",
	"title": "Bản đề xuất",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTại phần này, bạn cần tóm tắt các nội dung trong workshop mà bạn dự tính sẽ làm.\nBán thời trang : FFF 1. Tóm tắt điều hành Giải pháp được đề xuất là nền tảng trang web bán thông tin phát triển khai trên AWS, tận dụng công nghệ serverless và AI để quản lý doanh nghiệp một hệ thống thương mại điện tử an toàn, ổn định, chi phí tối ưu và dễ dàng mở rộng.\n2. Tuyên bố vấn đề Vấn đề hiện tại\nDoanh nghiệp nhỏ hoặc startup thường không đủ ngân sách để xây dựng hạ tầng phức tạp. Việc tự vận hành server truyền thống tốn kém (phần cứng, bảo trì, nhân sự vận hành). Khi số lượng khách hàng tăng đột biến, hệ thống truyền thống dễ bị quá tải, gây gián đoạn dịch vụ. Không có AI gợi ý sản phẩm, chatbot tư vấn, hoặc hệ thống dữ liệu hỗ trợ ra quyết định. Khó theo dõi hành vi khách hàng, tối ưu bán hàng và marketing.\nGiải pháp\nKiến trúc serverless → tự động mở rộng, tối ưu chi phí, không cần quản lý hạ tầng phức tạp. Đảm bảo tính an toàn, ổn định, khả dụng cao nhờ dịch vụ AWS bảo mật và giám sát. Phù hợp cho doanh nghiệp vừa \u0026amp; nhỏ cần thử nghiệm thị trường trước khi đầu tư lớn. Chỉ từ 50–100 USD/tháng, giúp giảm rủi ro tài chính. AI Chatbot hỗ trợ khách hàng 24/7, giảm tải nhân viên tư vấn, tăng sự hài lòng, gợi ý sản phẩm giúp tăng tỷ lệ chuyển đổi và giá trị đơn hàng.\n3. Kiến trúc giải pháp Dịch vụ AWS sử dụng\n1. Frontend (Web + CDN) Amazon S3 → Lưu trữ và host static web (Next.js build). Giúp giảm chi phí, không cần web server truyền thống. Amazon CloudFront → CDN phân phối nội dung toàn cầu, hỗ trợ SSL, giảm độ trễ tải trang. Amazon Route 53 → Quản lý domain, DNS, routing traffic đến CloudFront/S3. 2. Backend \u0026amp; API Amazon API Gateway → Cổng API nhận request từ frontend, điều phối đến Lambda/Fargate. AWS Lambda → Chạy code serverless (Node.js, Python\u0026hellip;) cho API mà không cần server. Amazon ECS Fargate → Chạy container backend (nếu có service phức tạp, cần runtime dài hơn Lambda). Amazon ECR → Lưu trữ Docker image để ECS Fargate lấy và chạy. 3. Database \u0026amp; Storage Amazon RDS (PostgreSQL) → Database quan hệ chính (lưu users, products, orders\u0026hellip;). Amazon DynamoDB → NoSQL database để lưu session, metadata, cache nhẹ. Amazon S3 → Lưu ảnh sản phẩm, hóa đơn, dữ liệu phân tích (data lake). Amazon ElastiCache (Redis) → Cache in-memory để tăng tốc đọc dữ liệu, giữ session tạm thời. 4. Search \u0026amp; Events Amazon OpenSearch → Search engine cho sản phẩm, phân tích log. Amazon SQS → Queue để xử lý đơn hàng hoặc tác vụ async (giảm tải API chính). Amazon SNS → Gửi thông báo (email, SMS, push notification) khi có sự kiện. Amazon EventBridge → Event bus để kết nối service (ví dụ trigger AI pipeline khi có order mới). 5. AI \u0026amp; Machine Learning Amazon Personalize → Tạo gợi ý sản phẩm cá nhân hóa cho từng khách hàng. Amazon Lex → Chatbot AI hỗ trợ khách hàng 24/7. Amazon Comprehend → Phân tích cảm xúc và từ khóa trong đánh giá khách hàng. Amazon Fraud Detector → Phát hiện giao dịch gian lận. Amazon Forecast → Dự báo tồn kho và nhu cầu bán hàng (triển khai giai đoạn sau). Amazon SageMaker → Train/deploy model ML tùy chỉnh nếu giải pháp AI mặc định không đủ. 6. Data Lake \u0026amp; ETL Amazon S3 (Data Lake) → Lưu dữ liệu raw + processed để phân tích. AWS Glue → ETL job dọn dẹp và chuẩn hóa dữ liệu. Amazon Athena → Query dữ liệu trực tiếp trên S3 bằng SQL (serverless). AWS Lake Formation → Quản lý quyền truy cập dữ liệu trong data lake. Amazon Kinesis → Thu thập sự kiện, clickstream từ người dùng theo thời gian thực. 7. Authentication \u0026amp; Security Amazon Cognito → Đăng ký, đăng nhập, quản lý user pool (SSO, OAuth2). AWS IAM → Quản lý role và quyền truy cập giữa các dịch vụ. AWS KMS → Mã hóa dữ liệu trong RDS, S3, DynamoDB. AWS Secrets Manager → Lưu API keys, mật khẩu DB, xoay vòng secret tự động. AWS WAF → Lọc request xấu, chống tấn công OWASP Top 10. AWS Shield → Bảo vệ khỏi tấn công DDoS. 8. Observability \u0026amp; Monitoring Amazon CloudWatch → Thu thập log, metric, thiết lập cảnh báo. AWS X-Ray → Trace request end-to-end, tìm bottleneck. Amazon Managed Grafana → Dashboard trực quan hóa metric, logs. OpenSearch Dashboards → Giao diện tìm kiếm \u0026amp; phân tích log từ OpenSearch. Amazon SNS → Gửi cảnh báo khi có lỗi hoặc vượt ngưỡng. 9. CI/CD \u0026amp; IaC Terraform / AWS CDK → IaC (Infrastructure as Code) để triển khai hạ tầng tự động. GitHub Actions → CI/CD pipeline: lint → test → build → deploy lên AWS. Amazon CodeArtifact (optional) → Quản lý private package repository. 10. Backup \u0026amp; DR Amazon RDS Snapshot → Backup database tự động. Amazon S3 Versioning + Cross-Region Replication → Backup file và data lake sang vùng khác (DR). 4. Triển khai kỹ thuật Các giai đoạn triển khai\n1. Tech Lead / Architect Tuần 0–2\nThiết kế kiến trúc: VPC, RDS, S3, Cognito, OpenSearch. Viết tài liệu kiến trúc + sơ đồ mạng. Review Terraform modules. Tuần 3–12\nCode review, approve PRs. Đảm bảo SLO: latency, error budget, cost. Kiểm thử DR drill, review runbooks. ✅ Deliverables:\nDiagram, tài liệu kiến trúc SLO/SLA IAM model 2. Frontend Engineer Tuần 1–2\nScaffold Vite project (JavaScript + Bootstrap). Tích hợp Cognito auth (login/signup). Tuần 3–6\nXây dựng UI: home, product list, product detail, cart, checkout. Upload hình ảnh qua S3 pre-signed URL. Tuần 7–9\nTích hợp chatbot widget (Lex). Tích hợp gợi ý sản phẩm từ Personalize. Tuần 10–12\nE2E tests (Playwright). Tối ưu SEO + Lighthouse (\u0026gt;= 90). Deploy build → CloudFront. ✅ Deliverables:\nSource code web UI hoàn chỉnh Test report Build production 3. Backend Engineer Tuần 1–3\nScaffold NestJS API, định nghĩa OpenAPI spec. Thiết kế DB schema (Postgres, Prisma migration). Tuần 4–6\nAPI: sản phẩm, giỏ hàng, đơn hàng. Payment integration (stub). Upload media (S3). Tuần 7–9\nLambda consumer cho SQS (order events). API gợi ý (Personalize). Fraud Detector scoring API. Tuần 10–12\nHardening: rate limit, validation. Integration tests (Jest + Supertest). Blue/green deployment support. ✅ Deliverables:\nOpenAPI docs API tested DB migrations Docker image 4. DevOps / SRE Tuần 0–2\nRepo /infra + Terraform skeleton. Setup GitHub Actions (lint → test → plan → apply). State backend: S3 + DynamoDB lock. Tuần 3–6\nProvision VPC, RDS, S3, Cognito, OpenSearch. Deploy staging environment. Tuần 7–9\nMonitoring: Grafana dashboards. Alerts: SNS → Slack/email. Backup policies: RDS snapshots, S3 versioning. Tuần 10–12\nDR drill (restore RDS, cross-region S3). Cost alerts, rightsizing. Prod cutover: Route53 switch. ✅ Deliverables:\nTerraform repo CI/CD pipelines Monitoring dashboards Runbooks 5. Data / ML Engineer Tuần 1–3\nThiết kế schema event (click, view, purchase). Pipeline: Kinesis → S3 raw. Glue job ETL → Parquet. Tuần 4–6\nFeed data vào Personalize. Train + deploy campaign. Tuần 7–9\nChatbot Lex intents: FAQ, tracking order, gợi ý sản phẩm. Fulfillment Lambda: query RDS, gọi Personalize API. Tuần 10–12\nForecast model cho tồn kho. Model Monitor (drift detection). Evaluation report. ✅ Deliverables:\nETL jobs + Parquet data Personalize campaign + chatbot intents Forecast model + monitoring Báo cáo đánh giá 5. Lộ trình \u0026amp; Mốc triển khai Trước thực tập (Tháng 0): 1 tháng lên kế hoạch và đánh giá trạm cũ. Thực tập (Tháng 1–3): Tháng 1: Học AWS và nâng cấp phần cứng. Tháng 2: Thiết kế và điều chỉnh kiến trúc. Tháng 3: Triển khai, kiểm thử, đưa vào sử dụng. 6. Ước tính ngân sách Có thể xem chi phí trên AWS Pricing Calculator\nHoặc tải tệp ước tính ngân sách.\nChi phí hạ tầng\nAWS Lambda: 0,00 USD/tháng (1.000 request, 512 MB lưu trữ). S3 Standard: 0,15 USD/tháng (6 GB, 2.100 request, 1 GB quét). Truyền dữ liệu: 0,02 USD/tháng (1 GB vào, 1 GB ra). AWS Amplify: 0,35 USD/tháng (256 MB, request 500 ms). Amazon API Gateway: 0,01 USD/tháng (2.000 request). AWS Glue ETL Jobs: 0,02 USD/tháng (2 DPU). AWS Glue Crawlers: 0,07 USD/tháng (1 crawler). MQTT (IoT Core): 0,08 USD/tháng (5 thiết bị, 45.000 tin nhắn). Tổng: 0,7 USD/tháng, 8,40 USD/12 tháng\nPhần cứng: 265 USD một lần (Raspberry Pi 5 và cảm biến). 7. Đánh giá rủi ro Ma trận rủi ro\nMất mạng: Ảnh hưởng trung bình, xác suất trung bình. Hỏng cảm biến: Ảnh hưởng cao, xác suất thấp. Vượt ngân sách: Ảnh hưởng trung bình, xác suất thấp. Chiến lược giảm thiểu\nMạng: Lưu trữ cục bộ trên Raspberry Pi với Docker. Cảm biến: Kiểm tra định kỳ, dự phòng linh kiện. Chi phí: Cảnh báo ngân sách AWS, tối ưu dịch vụ. Kế hoạch dự phòng\nQuay lại thu thập thủ công nếu AWS gặp sự cố. Sử dụng CloudFormation để khôi phục cấu hình liên quan đến chi phí. 8. Kết quả kỳ vọng Cải tiến kỹ thuật: Dữ liệu và phân tích thời gian thực thay thế quy trình thủ công. Có thể mở rộng tới 10–15 trạm.\nGiá trị dài hạn: Nền tảng dữ liệu 1 năm cho nghiên cứu AI, có thể tái sử dụng cho các dự án tương lai.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "IAM permissions Gắn IAM permission policy sau vào tài khoản aws user của bạn để triển khai và dọn dẹp tài nguyên trong workshop này.\n{ \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor0\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;cloudformation:*\u0026#34;, \u0026#34;cloudwatch:*\u0026#34;, \u0026#34;ec2:AcceptTransitGatewayPeeringAttachment\u0026#34;, \u0026#34;ec2:AcceptTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:AllocateAddress\u0026#34;, \u0026#34;ec2:AssociateAddress\u0026#34;, \u0026#34;ec2:AssociateIamInstanceProfile\u0026#34;, \u0026#34;ec2:AssociateRouteTable\u0026#34;, \u0026#34;ec2:AssociateSubnetCidrBlock\u0026#34;, \u0026#34;ec2:AssociateTransitGatewayRouteTable\u0026#34;, \u0026#34;ec2:AssociateVpcCidrBlock\u0026#34;, \u0026#34;ec2:AttachInternetGateway\u0026#34;, \u0026#34;ec2:AttachNetworkInterface\u0026#34;, \u0026#34;ec2:AttachVolume\u0026#34;, \u0026#34;ec2:AttachVpnGateway\u0026#34;, \u0026#34;ec2:AuthorizeSecurityGroupEgress\u0026#34;, \u0026#34;ec2:AuthorizeSecurityGroupIngress\u0026#34;, \u0026#34;ec2:CreateClientVpnEndpoint\u0026#34;, \u0026#34;ec2:CreateClientVpnRoute\u0026#34;, \u0026#34;ec2:CreateCustomerGateway\u0026#34;, \u0026#34;ec2:CreateDhcpOptions\u0026#34;, \u0026#34;ec2:CreateFlowLogs\u0026#34;, \u0026#34;ec2:CreateInternetGateway\u0026#34;, \u0026#34;ec2:CreateLaunchTemplate\u0026#34;, \u0026#34;ec2:CreateNetworkAcl\u0026#34;, \u0026#34;ec2:CreateNetworkInterface\u0026#34;, \u0026#34;ec2:CreateNetworkInterfacePermission\u0026#34;, \u0026#34;ec2:CreateRoute\u0026#34;, \u0026#34;ec2:CreateRouteTable\u0026#34;, \u0026#34;ec2:CreateSecurityGroup\u0026#34;, \u0026#34;ec2:CreateSubnet\u0026#34;, \u0026#34;ec2:CreateSubnetCidrReservation\u0026#34;, \u0026#34;ec2:CreateTags\u0026#34;, \u0026#34;ec2:CreateTransitGateway\u0026#34;, \u0026#34;ec2:CreateTransitGatewayPeeringAttachment\u0026#34;, \u0026#34;ec2:CreateTransitGatewayPrefixListReference\u0026#34;, \u0026#34;ec2:CreateTransitGatewayRoute\u0026#34;, \u0026#34;ec2:CreateTransitGatewayRouteTable\u0026#34;, \u0026#34;ec2:CreateTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:CreateVpc\u0026#34;, \u0026#34;ec2:CreateVpcEndpoint\u0026#34;, \u0026#34;ec2:CreateVpcEndpointConnectionNotification\u0026#34;, \u0026#34;ec2:CreateVpcEndpointServiceConfiguration\u0026#34;, \u0026#34;ec2:CreateVpnConnection\u0026#34;, \u0026#34;ec2:CreateVpnConnectionRoute\u0026#34;, \u0026#34;ec2:CreateVpnGateway\u0026#34;, \u0026#34;ec2:DeleteCustomerGateway\u0026#34;, \u0026#34;ec2:DeleteFlowLogs\u0026#34;, \u0026#34;ec2:DeleteInternetGateway\u0026#34;, \u0026#34;ec2:DeleteNetworkInterface\u0026#34;, \u0026#34;ec2:DeleteNetworkInterfacePermission\u0026#34;, \u0026#34;ec2:DeleteRoute\u0026#34;, \u0026#34;ec2:DeleteRouteTable\u0026#34;, \u0026#34;ec2:DeleteSecurityGroup\u0026#34;, \u0026#34;ec2:DeleteSubnet\u0026#34;, \u0026#34;ec2:DeleteSubnetCidrReservation\u0026#34;, \u0026#34;ec2:DeleteTags\u0026#34;, \u0026#34;ec2:DeleteTransitGateway\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayPeeringAttachment\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayPrefixListReference\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayRoute\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayRouteTable\u0026#34;, \u0026#34;ec2:DeleteTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:DeleteVpc\u0026#34;, \u0026#34;ec2:DeleteVpcEndpoints\u0026#34;, \u0026#34;ec2:DeleteVpcEndpointServiceConfigurations\u0026#34;, \u0026#34;ec2:DeleteVpnConnection\u0026#34;, \u0026#34;ec2:DeleteVpnConnectionRoute\u0026#34;, \u0026#34;ec2:Describe*\u0026#34;, \u0026#34;ec2:DetachInternetGateway\u0026#34;, \u0026#34;ec2:DisassociateAddress\u0026#34;, \u0026#34;ec2:DisassociateRouteTable\u0026#34;, \u0026#34;ec2:GetLaunchTemplateData\u0026#34;, \u0026#34;ec2:GetTransitGatewayAttachmentPropagations\u0026#34;, \u0026#34;ec2:ModifyInstanceAttribute\u0026#34;, \u0026#34;ec2:ModifySecurityGroupRules\u0026#34;, \u0026#34;ec2:ModifyTransitGatewayVpcAttachment\u0026#34;, \u0026#34;ec2:ModifyVpcAttribute\u0026#34;, \u0026#34;ec2:ModifyVpcEndpoint\u0026#34;, \u0026#34;ec2:ReleaseAddress\u0026#34;, \u0026#34;ec2:ReplaceRoute\u0026#34;, \u0026#34;ec2:RevokeSecurityGroupEgress\u0026#34;, \u0026#34;ec2:RevokeSecurityGroupIngress\u0026#34;, \u0026#34;ec2:RunInstances\u0026#34;, \u0026#34;ec2:StartInstances\u0026#34;, \u0026#34;ec2:StopInstances\u0026#34;, \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsEgress\u0026#34;, \u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsIngress\u0026#34;, \u0026#34;iam:AddRoleToInstanceProfile\u0026#34;, \u0026#34;iam:AttachRolePolicy\u0026#34;, \u0026#34;iam:CreateInstanceProfile\u0026#34;, \u0026#34;iam:CreatePolicy\u0026#34;, \u0026#34;iam:CreateRole\u0026#34;, \u0026#34;iam:DeleteInstanceProfile\u0026#34;, \u0026#34;iam:DeletePolicy\u0026#34;, \u0026#34;iam:DeleteRole\u0026#34;, \u0026#34;iam:DeleteRolePolicy\u0026#34;, \u0026#34;iam:DetachRolePolicy\u0026#34;, \u0026#34;iam:GetInstanceProfile\u0026#34;, \u0026#34;iam:GetPolicy\u0026#34;, \u0026#34;iam:GetRole\u0026#34;, \u0026#34;iam:GetRolePolicy\u0026#34;, \u0026#34;iam:ListPolicyVersions\u0026#34;, \u0026#34;iam:ListRoles\u0026#34;, \u0026#34;iam:PassRole\u0026#34;, \u0026#34;iam:PutRolePolicy\u0026#34;, \u0026#34;iam:RemoveRoleFromInstanceProfile\u0026#34;, \u0026#34;lambda:CreateFunction\u0026#34;, \u0026#34;lambda:DeleteFunction\u0026#34;, \u0026#34;lambda:DeleteLayerVersion\u0026#34;, \u0026#34;lambda:GetFunction\u0026#34;, \u0026#34;lambda:GetLayerVersion\u0026#34;, \u0026#34;lambda:InvokeFunction\u0026#34;, \u0026#34;lambda:PublishLayerVersion\u0026#34;, \u0026#34;logs:CreateLogGroup\u0026#34;, \u0026#34;logs:DeleteLogGroup\u0026#34;, \u0026#34;logs:DescribeLogGroups\u0026#34;, \u0026#34;logs:PutRetentionPolicy\u0026#34;, \u0026#34;route53:ChangeTagsForResource\u0026#34;, \u0026#34;route53:CreateHealthCheck\u0026#34;, \u0026#34;route53:CreateHostedZone\u0026#34;, \u0026#34;route53:CreateTrafficPolicy\u0026#34;, \u0026#34;route53:DeleteHostedZone\u0026#34;, \u0026#34;route53:DisassociateVPCFromHostedZone\u0026#34;, \u0026#34;route53:GetHostedZone\u0026#34;, \u0026#34;route53:ListHostedZones\u0026#34;, \u0026#34;route53domains:ListDomains\u0026#34;, \u0026#34;route53domains:ListOperations\u0026#34;, \u0026#34;route53domains:ListTagsForDomain\u0026#34;, \u0026#34;route53resolver:AssociateResolverEndpointIpAddress\u0026#34;, \u0026#34;route53resolver:AssociateResolverRule\u0026#34;, \u0026#34;route53resolver:CreateResolverEndpoint\u0026#34;, \u0026#34;route53resolver:CreateResolverRule\u0026#34;, \u0026#34;route53resolver:DeleteResolverEndpoint\u0026#34;, \u0026#34;route53resolver:DeleteResolverRule\u0026#34;, \u0026#34;route53resolver:DisassociateResolverEndpointIpAddress\u0026#34;, \u0026#34;route53resolver:DisassociateResolverRule\u0026#34;, \u0026#34;route53resolver:GetResolverEndpoint\u0026#34;, \u0026#34;route53resolver:GetResolverRule\u0026#34;, \u0026#34;route53resolver:ListResolverEndpointIpAddresses\u0026#34;, \u0026#34;route53resolver:ListResolverEndpoints\u0026#34;, \u0026#34;route53resolver:ListResolverRuleAssociations\u0026#34;, \u0026#34;route53resolver:ListResolverRules\u0026#34;, \u0026#34;route53resolver:ListTagsForResource\u0026#34;, \u0026#34;route53resolver:UpdateResolverEndpoint\u0026#34;, \u0026#34;route53resolver:UpdateResolverRule\u0026#34;, \u0026#34;s3:AbortMultipartUpload\u0026#34;, \u0026#34;s3:CreateBucket\u0026#34;, \u0026#34;s3:DeleteBucket\u0026#34;, \u0026#34;s3:DeleteObject\u0026#34;, \u0026#34;s3:GetAccountPublicAccessBlock\u0026#34;, \u0026#34;s3:GetBucketAcl\u0026#34;, \u0026#34;s3:GetBucketOwnershipControls\u0026#34;, \u0026#34;s3:GetBucketPolicy\u0026#34;, \u0026#34;s3:GetBucketPolicyStatus\u0026#34;, \u0026#34;s3:GetBucketPublicAccessBlock\u0026#34;, \u0026#34;s3:GetObject\u0026#34;, \u0026#34;s3:GetObjectVersion\u0026#34;, \u0026#34;s3:GetBucketVersioning\u0026#34;, \u0026#34;s3:ListAccessPoints\u0026#34;, \u0026#34;s3:ListAccessPointsForObjectLambda\u0026#34;, \u0026#34;s3:ListAllMyBuckets\u0026#34;, \u0026#34;s3:ListBucket\u0026#34;, \u0026#34;s3:ListBucketMultipartUploads\u0026#34;, \u0026#34;s3:ListBucketVersions\u0026#34;, \u0026#34;s3:ListJobs\u0026#34;, \u0026#34;s3:ListMultipartUploadParts\u0026#34;, \u0026#34;s3:ListMultiRegionAccessPoints\u0026#34;, \u0026#34;s3:ListStorageLensConfigurations\u0026#34;, \u0026#34;s3:PutAccountPublicAccessBlock\u0026#34;, \u0026#34;s3:PutBucketAcl\u0026#34;, \u0026#34;s3:PutBucketPolicy\u0026#34;, \u0026#34;s3:PutBucketPublicAccessBlock\u0026#34;, \u0026#34;s3:PutObject\u0026#34;, \u0026#34;secretsmanager:CreateSecret\u0026#34;, \u0026#34;secretsmanager:DeleteSecret\u0026#34;, \u0026#34;secretsmanager:DescribeSecret\u0026#34;, \u0026#34;secretsmanager:GetSecretValue\u0026#34;, \u0026#34;secretsmanager:ListSecrets\u0026#34;, \u0026#34;secretsmanager:ListSecretVersionIds\u0026#34;, \u0026#34;secretsmanager:PutResourcePolicy\u0026#34;, \u0026#34;secretsmanager:TagResource\u0026#34;, \u0026#34;secretsmanager:UpdateSecret\u0026#34;, \u0026#34;sns:ListTopics\u0026#34;, \u0026#34;ssm:DescribeInstanceProperties\u0026#34;, \u0026#34;ssm:DescribeSessions\u0026#34;, \u0026#34;ssm:GetConnectionStatus\u0026#34;, \u0026#34;ssm:GetParameters\u0026#34;, \u0026#34;ssm:ListAssociations\u0026#34;, \u0026#34;ssm:ResumeSession\u0026#34;, \u0026#34;ssm:StartSession\u0026#34;, \u0026#34;ssm:TerminateSession\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34; } ] } Khởi tạo tài nguyên bằng CloudFormation Trong lab này, chúng ta sẽ dùng N.Virginia region (us-east-1).\nĐể chuẩn bị cho môi trường làm workshop, chúng ta deploy CloudFormation template sau (click link): PrivateLinkWorkshop . Để nguyên các lựa chọn mặc định.\nLựa chọn 2 mục acknowledgement Chọn Create stack Quá trình triển khai CloudFormation cần khoảng 15 phút để hoàn thành.\n2 VPCs đã được tạo 3 EC2s đã được tạo "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.3-s3-vpc/5.3.2-test-gwe/",
	"title": "Kiểm tra Gateway Endpoint",
	"tags": [],
	"description": "",
	"content": "Tạo S3 bucket Đi đến S3 management console Trong Bucket console, chọn Create bucket Trong Create bucket console Đặt tên bucket: chọn 1 tên mà không bị trùng trong phạm vi toàn cầu (gợi ý: lab\u0026lt;số-lab\u0026gt;\u0026lt;tên-bạn\u0026gt;) Giữ nguyên giá trị của các fields khác (default) Kéo chuột xuống và chọn Create bucket Tạo thành công S3 bucket Kết nối với EC2 bằng session manager Trong workshop này, bạn sẽ dùng AWS Session Manager để kết nối đến các EC2 instances. Session Manager là 1 tính năng trong dịch vụ Systems Manager được quản lý hoàn toàn bởi AWS. System manager cho phép bạn quản lý Amazon EC2 instances và các máy ảo on-premises (VMs)thông qua 1 browser-based shell. Session Manager cung cấp khả năng quản lý phiên bản an toàn và có thể kiểm tra mà không cần mở cổng vào, duy trì máy chủ bastion host hoặc quản lý khóa SSH.\nFirst cloud journey Lab để hiểu sâu hơn về Session manager.\nTrong AWS Management Console, gõ Systems Manager trong ô tìm kiếm và nhấn Enter: Từ Systems Manager menu, tìm Node Management ở thanh bên trái và chọn Session Manager: Click Start Session, và chọn EC2 instance tên Test-Gateway-Endpoint. Phiên bản EC2 này đã chạy trong \u0026ldquo;VPC cloud\u0026rdquo; và sẽ được dùng để kiểm tra khả năng kết nối với Amazon S3 thông qua điểm cuối Cổng mà bạn vừa tạo (s3-gwe).\nSession Manager sẽ mở browser tab mới với shell prompt: sh-4.2 $\nBạn đã bắt đầu phiên kết nối đến EC2 trong VPC Cloud thành công. Trong bước tiếp theo, chúng ta sẽ tạo một S3 bucket và một tệp trong đó.\nCreate a file and upload to s3 bucket Đổi về ssm-user\u0026rsquo;s thư mục bằng lệnh \u0026ldquo;cd ~\u0026rdquo; Tạo 1 file để kiểm tra bằng lệnh \u0026ldquo;fallocate -l 1G testfile.xyz\u0026rdquo;, 1 file tên \u0026ldquo;testfile.xyz\u0026rdquo; có kích thước 1GB sẽ được tạo. Tải file mình vừa tạo lên S3 với lệnh \u0026ldquo;aws s3 cp testfile.xyz s3://your-bucket-name\u0026rdquo;. Thay your-bucket-name bằng tên S3 bạn đã tạo. Bạn đã tải thành công tệp lên bộ chứa S3 của mình. Bây giờ bạn có thể kết thúc session.\nKiểm tra object trong S3 bucket Đi đến S3 console. Click tên s3 bucket của bạn Trong Bucket console, bạn sẽ thấy tệp bạn đã tải lên S3 bucket của mình Tóm tắt Chúc mừng bạn đã hoàn thành truy cập S3 từ VPC. Trong phần này, bạn đã tạo gateway endpoint cho Amazon S3 và sử dụng AWS CLI để tải file lên. Quá trình tải lên hoạt động vì gateway endpoint cho phép giao tiếp với S3 mà không cần Internet gateway gắn vào \u0026ldquo;VPC Cloud\u0026rdquo;. Điều này thể hiện chức năng của gateway endpoint như một đường dẫn an toàn đến S3 mà không cần đi qua pub lic Internet.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.4-s3-onprem/5.4.2-create-interface-enpoint/",
	"title": "Tạo một S3 Interface endpoint",
	"tags": [],
	"description": "",
	"content": "Trong phần này, bạn sẽ tạo và kiểm tra Interface Endpoint S3 bằng cách sử dụng môi trường truyền thống mô phỏng.\nQuay lại Amazon VPC menu. Trong thanh điều hướng bên trái, chọn Endpoints, sau đó click Create Endpoint.\nTrong Create endpoint console:\nĐặt tên interface endpoint Trong Service category, chọn aws services Trong Search box, gõ S3 và nhấn Enter. Chọn endpoint có tên com.amazonaws.us-east-1.s3. Đảm bảo rằng cột Type có giá trị Interface. Đối với VPC, chọn VPC Cloud từ drop-down. Đảm bảo rằng bạn chọn \u0026ldquo;VPC Cloud\u0026rdquo; và không phải \u0026ldquo;VPC On-prem\u0026rdquo;\nMở rộng Additional settings và đảm bảo rằng Enable DNS name không được chọn (sẽ sử dụng điều này trong phần tiếp theo của workshop) Chọn 2 subnets trong AZs sau: us-east-1a and us-east-1b Đối với Security group, chọn SGforS3Endpoint: Giữ default policy - full access và click Create endpoint Chúc mừng bạn đã tạo thành công S3 interface endpoint. Ở bước tiếp theo, chúng ta sẽ kiểm tra interface endpoint.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.10-week10/",
	"title": "Worklog Tuần 10",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 10: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 10: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.11-week11/",
	"title": "Worklog Tuần 11",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 11: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 11: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/1-worklog/1.12-week12/",
	"title": "Worklog Tuần 12",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 12: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 12: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/3-blogstranslated/",
	"title": "Các bài blogs đã dịch",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTại đây sẽ là phần liệt kê, giới thiệu các blogs mà các bạn đã dịch. Ví dụ:\nBlog 1 - Các mô hình OpenAI open-weight hiện đã có trên AWS Vào ngày 5 tháng 8 năm 2025, AWS đã công bố hai mô hình open-weight mới nhất của OpenAI — gpt-oss-120b và gpt-oss-20b — hiện đã có thể truy cập thông qua Amazon Bedrock và Amazon SageMaker JumpStart. Đây là một cột mốc quan trọng, vì đây là lần đầu tiên OpenAI cung cấp quyền truy cập công khai vào trọng số mô hình kể từ GPT-2, mở ra nhiều cơ hội tùy chỉnh và linh hoạt hơn.\nBlog 2 - OpenSecrets sử dụng AWS để chuyển đổi minh bạch chính trị thông qua nâng cao đối sánh dữ liệu OpenSecrets là một tổ chức phi lợi nhuận độc lập, phi đảng phái với sứ mệnh trở thành nguồn thông tin đáng tin cậy về dòng tiền trong chính trị Mỹ. Tổ chức này thực hiện sứ mệnh bằng cách cung cấp dữ liệu, phân tích và công cụ toàn diện, đáng tin cậy cho các nhà hoạch định chính sách, nhà báo và công dân. Tầm nhìn của họ là người dân Mỹ sẽ sử dụng dữ liệu về tài chính chính trị để xây dựng một nền dân chủ sôi động, đại diện và phản hồi tốt hơn.\nBlog 3 - Phân tích vai trò dẫn dắt của AWS trong các báo cáo Gartner Magic Quadrant 2025 Khi tôi phân tích các bài viết gần đây của AWS nêu chi tiết việc họ được ghi nhận trong nhiều báo cáo Gartner Magic Quadrant, tôi tự hỏi điều gì thực sự cấu thành nên vị thế dẫn đầu về đám mây trong bối cảnh công nghệ thay đổi nhanh chóng ngày nay. Theo sát hành trình của AWS trong thập kỷ qua, tôi tin rằng hiệu suất ổn định của họ qua các đợt đánh giá này cho thấy nhiều hơn là vị thế thống trị thị trường—nó thể hiện sự thấu hiểu sâu sắc nhu cầu của doanh nghiệp trên nhiều lĩnh vực. Theo đánh giá của tôi, đạt vị trí “Leader” ở chỉ một Magic Quadrant đã là đáng chú ý, nhưng duy trì vị trí này trên năm hạng mục khác nhau đồng thời đứng cao nhất về “Ability to Execute” (Năng lực thực thi) đối với Strategic Cloud Platform Services trong suốt 15 năm liên tiếp là điều, theo tôi, chưa từng có tiền lệ trong ngành điện toán đám mây. Sự xuất sắc bền bỉ này cho thấy một văn hóa ăn sâu về lấy khách hàng làm trung tâm và đổi mới lan tỏa khắp tổ chức của họ.\nBlog 4 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\nBlog 5 - \u0026hellip; Blog này giới thiệu cách bắt đầu xây dựng data lake trong lĩnh vực y tế bằng cách áp dụng kiến trúc microservices. Bạn sẽ tìm hiểu vì sao data lake quan trọng trong việc lưu trữ và phân tích dữ liệu y tế đa dạng (hồ sơ bệnh án điện tử, dữ liệu xét nghiệm, thiết bị IoT y tế…), cách microservices giúp hệ thống linh hoạt, dễ mở rộng và dễ bảo trì hơn. Bài viết cũng hướng dẫn các bước khởi tạo môi trường, tổ chức pipeline xử lý dữ liệu, và đảm bảo tuân thủ các tiêu chuẩn bảo mật \u0026amp; quyền riêng tư như HIPAA.\nBlog 6 - \u0026hellip; The Model Context Protocol (MCP) được tạo ra nhằm mang lại tính nhất quán trong cách các ứng dụng tương tác với các mô hình AI sinh. Thay vì phải chắp vá từng tích hợp riêng lẻ cho mỗi mô hình hoặc môi trường lưu trữ, MCP cung cấp một lớp giao tiếp chuẩn hóa.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.4-s3-onprem/5.4.3-test-endpoint/",
	"title": "Kiểm tra Interface Endpoint",
	"tags": [],
	"description": "",
	"content": "Lấy regional DNS name (tên DNS khu vực) của S3 interface endpoint Trong Amazon VPC menu, chọn Endpoints.\nClick tên của endpoint chúng ta mới tạo ở mục 4.2: s3-interface-endpoint. Click details và lưu lại regional DNS name của endpoint (cái đầu tiên) vào text-editor của bạn để dùng ở các bước sau.\nKết nối đến EC2 instance ở trong \u0026ldquo;VPC On-prem\u0026rdquo; (giả lập môi trường truyền thống) Đi đến Session manager bằng cách gõ \u0026ldquo;session manager\u0026rdquo; vào ô tìm kiếm\nClick Start Session, chọn EC2 instance có tên Test-Interface-Endpoint. EC2 instance này đang chạy trên \u0026ldquo;VPC On-prem\u0026rdquo; và sẽ được sử dụng để kiểm tra kết nối đến Amazon S3 thông qua Interface endpoint. Session Manager sẽ mở 1 browser tab mới với shell prompt: sh-4.2 $\nĐi đến ssm-user\u0026rsquo;s home directory với lệnh \u0026ldquo;cd ~\u0026rdquo;\nTạo 1 file tên testfile2.xyz\nfallocate -l 1G testfile2.xyz Copy file vào S3 bucket mình tạo ở section 4.2 aws s3 cp --endpoint-url https://bucket.\u0026lt;Regional-DNS-Name\u0026gt; testfile2.xyz s3://\u0026lt;your-bucket-name\u0026gt; Câu lệnh này yêu cầu thông số \u0026ndash;endpoint-url, bởi vì bạn cần sử dụng DNS name chỉ định cho endpoint để truy cập vào S3 thông qua Interface endpoint. Không lấy \u0026rsquo; * \u0026rsquo; khi copy/paste tên DNS khu vực. Cung cấp tên S3 bucket của bạn Bây giờ tệp đã được thêm vào bộ chứa S3 của bạn. Hãy kiểm tra bộ chứa S3 của bạn trong bước tiếp theo.\nKiểm tra Object trong S3 bucket Đi đến S3 console Click Buckets Click tên bucket của bạn và bạn sẽ thấy testfile2.xyz đã được thêm vào s3 bucket của bạn "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.3-s3-vpc/",
	"title": "Truy cập S3 từ VPC",
	"tags": [],
	"description": "",
	"content": "Sử dụng Gateway endpoint Trong phần này, bạn sẽ tạo một Gateway endpoint để truy cập Amazon S3 từ một EC2 instance. Gateway endpoint sẽ cho phép tải một object lên S3 bucket mà không cần sử dụng Internet Công cộng. Để tạo endpoint, bạn phải chỉ định VPC mà bạn muốn tạo endpoint và dịch vụ (trong trường hợp này là S3) mà bạn muốn thiết lập kết nối.\nNội dung Tạo gateway endpoint Test gateway endpoint "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/4-eventparticipated/",
	"title": "Các events đã tham gia",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTrong phần này, các bạn cần liệt kê và mô tả chi tiết các sự kiện (event) mà mình đã tham gia trong suốt quá trình thực tập hoặc làm việc.\nMỗi sự kiện nên được trình bày theo định dạng Event 1, Event 2, Event 3…, kèm theo các thông tin:\nTên sự kiện Thời gian tổ chức Địa điểm (nếu có) Vai trò của bạn trong sự kiện (người tham dự, hỗ trợ tổ chức, diễn giả, v.v.) Mô tả ngắn gọn nội dung và hoạt động chính trong sự kiện Kết quả hoặc giá trị đạt được (bài học, kỹ năng mới, đóng góp cho nhóm/dự án) Việc liệt kê này giúp thể hiện rõ sự tham gia thực tế của bạn, cũng như các kỹ năng mềm và kinh nghiệm bạn đã tích lũy qua từng sự kiện. Trong quá trình thực tập, em đã tham gia 2 events, với mỗi event là một trải nghiệm đáng nhớ với những kiến thức mới, hay và bổ ích, cùng với đó là nhứng món quà và những khoảnh khắc rất tuyệt vời.\nEvent 1 Tên sự kiện: Vietnam Cloud Day 2025 : Ho Chi Minh City Connect Edition for Builders\nThời gian: 09:00 ngày 13/08/2025\nĐịa điểm: Tầng 36, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\nMô tả: Giải thích ngắn gọn về Generative AI, Data Analytics, Migration \u0026amp; Modernization, cũng như bảo mật để làm cho hệ thống có khả năng mở rộng, an toàn và đáng tin cậy.\nMô tả:\nEvent 2 Tên sự kiện: GenAI-powered App-DB Modernization workshop\nThời gian: 09:00 ngày 13/08/2025\nĐịa điểm: Tầng 26, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.4-s3-onprem/5.4.4-dns-simulation/",
	"title": "Mô phỏng On-premises DNS ",
	"tags": [],
	"description": "",
	"content": "AWS PrivateLink endpoint có một địa chỉ IP cố định trong từng AZ nơi chúng được triển khai, trong suốt thời gian tồn tại của endpoint (cho đến khi endpoint bị xóa). Các địa chỉ IP này được gắn vào Elastic network interface (ENI). AWS khuyến nghị sử dụng DNS để resolve địa chỉ IP cho endpoint để các ứng dụng downstream sử dụng địa chỉ IP mới nhất khi ENIs được thêm vào AZ mới hoặc bị xóa theo thời gian.\nTrong phần này, bạn sẽ tạo một quy tắc chuyển tiếp (forwarding rule) để gửi các yêu cầu resolve DNS từ môi trường truyền thống (mô phỏng) đến Private Hosted Zone trên Route 53. Phần này tận dụng cơ sở hạ tầng do CloudFormation triển khai trong phần Chuẩn bị môi trường.\nTạo DNS Alias Records cho Interface endpoint Click link để đi đến Route 53 management console (Hosted Zones section). Mẫu CloudFormation mà bạn triển khai trong phần Chuẩn bị môi trường đã tạo Private Hosted Zone này. Nhấp vào tên của Private Hosted Zone, s3.us-east-1.amazonaws.com: Tạo 1 record mới trong Private Hosted Zone: Giữ nguyên Record name và record type Alias Button: click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Add another record, và add 1 cái record thứ 2 sử dụng những thông số sau: Record name: *. Record type: giữ giá trị default (type A) Alias Button: Click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Create records Record mới xuất hiện trên giao diện Route 53.\nTạo một Resolver Forwarding Rule Route 53 Resolver Forwarding Rules cho phép bạn chuyển tiếp các DNS queries từ VPC của bạn đến các nguồn khác để resolve name. Bên ngoài môi trường workshop, bạn có thể sử dụng tính năng này để chuyển tiếp các DNS queries từ VPC của bạn đến các máy chủ DNS chạy trên on-premises. Trong phần này, bạn sẽ mô phỏng một on-premises conditional forwarder bằng cách tạo một forwarding rule để chuyển tiếp các DNS queries for Amazon S3 đến một Private Hosted Zone chạy trong \u0026ldquo;VPC Cloud\u0026rdquo; để resolve PrivateLink interface endpoint regional DNS name.\nTừ giao diện Route 53, chọn Inbound endpoints trên thanh bên trái\nTrong giao diện Inbound endpoint, Chọn ID của Inbound endpoint.\nSao chép 2 địa chỉ IP trong danh sách vào trình chỉnh sửa. Từ giao diện Route 53, chọn Resolver \u0026gt; Rules và chọn Create rule Trong giao diện Create rule Name: myS3Rule Rule type: Forward Domain name: s3.us-east-1.amazonaws.com VPC: VPC On-prem Outbound endpoint: VPCOnpremOutboundEndpoint Target IP Addresses: điền cả hai IP bạn đã lưu trữ trên trình soạn thảo (inbound endpoint addresses) và sau đó chọn Submit Bạn đã tạo thành công resolver forwarding rule.\nKiểm tra on-premises DNS mô phỏng. Kết nối đến Test-Interface-Endpoint EC2 instance với Session Manager Kiểm tra DNS resolution. Lệnh dig sẽ trả về địa chỉ IP được gán cho VPC endpoint interface đang chạy trên VPC (địa chỉ IP của bạn sẽ khác): dig +short s3.us-east-1.amazonaws.com Các địa chỉ IP được trả về là các địa chỉ IP VPC enpoint, KHÔNG phải là các địa chỉ IP Resolver mà bạn đã dán từ trình chỉnh sửa văn bản của mình. Các địa chỉ IP của Resolver endpoint và VPC endpoin trông giống nhau vì chúng đều từ khối CIDR VPC Cloud.\nTruy cập vào menu VPC (phần Endpoints), chọn S3 interface endpoint. Nhấp vào tab Subnets và xác nhận rằng các địa chỉ IP được trả về bởi lệnh Dig khớp với VPC endpoint: Hãy quay lại shell của bạn và sử dụng AWS CLI để kiểm tra danh sách các bucket S3 của bạn: aws s3 ls --endpoint-url https://s3.us-east-1.amazonaws.com Kết thúc phiên làm việc của Session Manager của bạn: Trong phần này, bạn đã tạo một Interface Endpoint cho Amazon S3. Điểm cuối này có thể được truy cập từ on-premises thông qua Site-to-Site VPN hoặc AWS Direct Connect. Các điểm cuối Route 53 Resolver outbound giả lập chuyển tiếp các yêu cầu DNS từ on-premises đến một Private Hosted Zone đang chạy trên đám mây. Các điểm cuối Route 53 inbound nhận yêu cầu giải quyết và trả về một phản hồi chứa địa chỉ IP của Interface Endpoint VPC. Sử dụng DNS để giải quyết các địa chỉ IP của điểm cuối cung cấp tính sẵn sàng cao trong trường hợp một Availability Zone gặp sự cố.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.4-s3-onprem/",
	"title": "Truy cập S3 từ môi trường truyền thống",
	"tags": [],
	"description": "",
	"content": "Tổng quan Trong phần này, bạn sẽ tạo một Interface Endpoint để truy cập Amazon S3 từ môi trường truyền thống mô phỏng. Interface Endpoint sẽ cho phép bạn định tuyến đến Amazon S3 qua kết nối VPN từ môi trường truyền thống mô phỏng của bạn.\nTại sao nên sử dụng Interface Endpoint:\nCác Gateway endpoints chỉ hoạt động với các tài nguyên đang chạy trong VPC nơi chúng được tạo. Interface Endpoint hoạt động với tài nguyên chạy trong VPC và cả tài nguyên chạy trong môi trường truyền thống. Khả năng kết nối từ môi trường truyền thống của bạn với aws cloud có thể được cung cấp bởi AWS Site-to-Site VPN hoặc AWS Direct Connect. Interface Endpoint cho phép bạn kết nối với các dịch vụ do AWS PrivateLink cung cấp. Các dịch vụ này bao gồm một số dịch vụ AWS, dịch vụ do các đối tác và khách hàng AWS lưu trữ trong VPC của riêng họ (gọi tắt là Dịch vụ PrivateLink endpoints) và các dịch vụ Đối tác AWS Marketplace. Đối với workshop này, chúng ta sẽ tập trung vào việc kết nối với Amazon S3. "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.5-policy/",
	"title": "VPC Endpoint Policies",
	"tags": [],
	"description": "",
	"content": "Khi bạn tạo một Interface Endpoint hoặc cổng, bạn có thể đính kèm một chính sách điểm cuối để kiểm soát quyền truy cập vào dịch vụ mà bạn đang kết nối. Chính sách VPC Endpoint là chính sách tài nguyên IAM mà bạn đính kèm vào điểm cuối. Nếu bạn không đính kèm chính sách khi tạo điểm cuối, thì AWS sẽ đính kèm chính sách mặc định cho bạn để cho phép toàn quyền truy cập vào dịch vụ thông qua điểm cuối.\nBạn có thể tạo chính sách chỉ hạn chế quyền truy cập vào các S3 bucket cụ thể. Điều này hữu ích nếu bạn chỉ muốn một số Bộ chứa S3 nhất định có thể truy cập được thông qua điểm cuối.\nTrong phần này, bạn sẽ tạo chính sách VPC Endpoint hạn chế quyền truy cập vào S3 bucket được chỉ định trong chính sách VPC Endpoint.\nKết nối tới EC2 và xác minh kết nối tới S3. Bắt đầu một phiên AWS Session Manager mới trên máy chủ có tên là Test-Gateway-Endpoint. Từ phiên này, xác minh rằng bạn có thể liệt kê nội dung của bucket mà bạn đã tạo trong Phần 1: Truy cập S3 từ VPC. aws s3 ls s3://\u0026lt;your-bucket-name\u0026gt; Nội dung của bucket bao gồm hai tệp có dung lượng 1GB đã được tải lên trước đó.\nTạo một bucket S3 mới; tuân thủ mẫu đặt tên mà bạn đã sử dụng trong Phần 1, nhưng thêm \u0026lsquo;-2\u0026rsquo; vào tên. Để các trường khác là mặc định và nhấp vào Create. Tạo bucket thành công. Policy mặc định cho phép truy cập vào tất cả các S3 Buckets thông qua VPC endpoint.\nTrong giao diện Edit Policy, sao chép và dán theo policy sau, thay thế yourbucketname-2 với tên bucket thứ hai của bạn. Policy này sẽ cho phép truy cập đến bucket mới thông qua VPC endpoint, nhưng không cho phép truy cập đến các bucket còn lại. Chọn Save để kích hoạt policy. { \u0026#34;Id\u0026#34;: \u0026#34;Policy1631305502445\u0026#34;, \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;Stmt1631305501021\u0026#34;, \u0026#34;Action\u0026#34;: \u0026#34;s3:*\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Resource\u0026#34;: [ \u0026#34;arn:aws:s3:::yourbucketname-2\u0026#34;, \u0026#34;arn:aws:s3:::yourbucketname-2/*\u0026#34; ], \u0026#34;Principal\u0026#34;: \u0026#34;*\u0026#34; } ] } Cấu hình policy thành công.\nTừ session của bạn trên Test-Gateway-Endpoint instance, kiểm tra truy cập đến S3 bucket bạn tạo ở bước đầu aws s3 ls s3://\u0026lt;yourbucketname\u0026gt; Câu lệnh trả về lỗi bởi vì truy cập vào S3 bucket không có quyền trong VPC endpoint policy.\nTrở lại home directory của bạn trên EC2 instance cd~ Tạo file fallocate -l 1G test-bucket2.xyz Sao chép file lên bucket thứ 2 aws s3 cp test-bucket2.xyz s3://\u0026lt;your-2nd-bucket-name\u0026gt; Thao tác này được cho phép bởi VPC endpoint policy.\nSau đó chúng ta kiểm tra truy cập vào S3 bucket đầu tiên\naws s3 cp test-bucket2.xyz s3://\u0026lt;your-1st-bucket-name\u0026gt;\nCâu lệnh xảy ra lỗi bởi vì bucket không có quyền truy cập bởi VPC endpoint policy.\nTrong phần này, bạn đã tạo chính sách VPC Endpoint cho Amazon S3 và sử dụng AWS CLI để kiểm tra chính sách. Các hoạt động AWS CLI liên quan đến bucket S3 ban đầu của bạn thất bại vì bạn áp dụng một chính sách chỉ cho phép truy cập đến bucket thứ hai mà bạn đã tạo. Các hoạt động AWS CLI nhắm vào bucket thứ hai của bạn thành công vì chính sách cho phép chúng. Những chính sách này có thể hữu ích trong các tình huống khi bạn cần kiểm soát quyền truy cập vào tài nguyên thông qua VPC Endpoint.\n"
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/",
	"title": "Workshop",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nĐảm bảo truy cập Hybrid an toàn đến S3 bằng cách sử dụng VPC endpoint Tổng quan AWS PrivateLink cung cấp kết nối riêng tư đến các dịch vụ aws từ VPCs hoặc trung tâm dữ liệu (on-premise) mà không làm lộ lưu lượng truy cập ra ngoài public internet.\nTrong bài lab này, chúng ta sẽ học cách tạo, cấu hình, và kiểm tra VPC endpoints để cho phép workload của bạn tiếp cận các dịch vụ AWS mà không cần đi qua Internet công cộng.\nChúng ta sẽ tạo hai loại endpoints để truy cập đến Amazon S3: gateway vpc endpoint và interface vpc endpoint. Hai loại vpc endpoints này mang đến nhiều lợi ích tùy thuộc vào việc bạn truy cập đến S3 từ môi trường cloud hay từ trung tâm dữ liệu (on-premise).\nGateway - Tạo gateway endpoint để gửi lưu lượng đến Amazon S3 hoặc DynamoDB using private IP addresses. Bạn điều hướng lưu lượng từ VPC của bạn đến gateway endpoint bằng các bảng định tuyến (route tables) Interface - Tạo interface endpoint để gửi lưu lượng đến các dịch vụ điểm cuối (endpoints) sử dụng Network Load Balancer để phân phối lưu lượng. Lưu lượng dành cho dịch vụ điểm cuối được resolved bằng DNS. Nội dung Tổng quan về workshop Chuẩn bị Truy cập đến S3 từ VPC Truy cập đến S3 từ TTDL On-premises VPC Endpoint Policies (làm thêm) Dọn dẹp tài nguyên "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/5-workshop/5.6-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên Xin chúc mừng bạn đã hoàn thành xong lab này! Trong lab này, bạn đã học về các mô hình kiến trúc để truy cập Amazon S3 mà không sử dụng Public Internet.\nBằng cách tạo Gateway endpoint, bạn đã cho phép giao tiếp trực tiếp giữa các tài nguyên EC2 và Amazon S3, mà không đi qua Internet Gateway. Bằng cách tạo Interface endpoint, bạn đã mở rộng kết nối S3 đến các tài nguyên chạy trên trung tâm dữ liệu trên chỗ của bạn thông qua AWS Site-to-Site VPN hoặc Direct Connect. Dọn dẹp Điều hướng đến Hosted Zones trên phía trái của bảng điều khiển Route 53. Nhấp vào tên của s3.us-east-1.amazonaws.com zone. Nhấp vào Delete và xác nhận việc xóa bằng cách nhập từ khóa \u0026ldquo;delete\u0026rdquo;. Disassociate Route 53 Resolver Rule - myS3Rule from \u0026ldquo;VPC Onprem\u0026rdquo; and Delete it. 4.Mở console của CloudFormation và xóa hai stack CloudFormation mà bạn đã tạo cho bài thực hành này:\nPLOnpremSetup PLCloudSetup Xóa các S3 bucket Mở bảng điều khiển S3 Chọn bucket chúng ta đã tạo cho lab, nhấp chuột và xác nhận là empty. Nhấp Delete và xác nhận delete. "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/6-self-evaluation/",
	"title": "Tự đánh giá",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTrong suốt thời gian thực tập tại [Tên công ty/tổ chức] từ [ngày bắt đầu] đến [ngày kết thúc], tôi đã có cơ hội học hỏi, rèn luyện và áp dụng kiến thức đã được trang bị tại trường vào môi trường làm việc thực tế.\nTôi đã tham gia [mô tả ngắn gọn dự án hoặc công việc chính], qua đó cải thiện kỹ năng [liệt kê kỹ năng: lập trình, phân tích, viết báo cáo, giao tiếp…].\nVề tác phong, tôi luôn cố gắng hoàn thành tốt nhiệm vụ, tuân thủ nội quy, và tích cực trao đổi với đồng nghiệp để nâng cao hiệu quả công việc.\nĐể phản ánh một cách khách quan quá trình thực tập, tôi xin tự đánh giá bản thân dựa trên các tiêu chí dưới đây:\nSTT Tiêu chí Mô tả Tốt Khá Trung bình 1 Kiến thức và kỹ năng chuyên môn Hiểu biết về ngành, áp dụng kiến thức vào thực tế, kỹ năng sử dụng công cụ, chất lượng công việc ✅ ☐ ☐ 2 Khả năng học hỏi Tiếp thu kiến thức mới, học hỏi nhanh ☐ ✅ ☐ 3 Chủ động Tự tìm hiểu, nhận nhiệm vụ mà không chờ chỉ dẫn ✅ ☐ ☐ 4 Tinh thần trách nhiệm Hoàn thành công việc đúng hạn, đảm bảo chất lượng ✅ ☐ ☐ 5 Kỷ luật Tuân thủ giờ giấc, nội quy, quy trình làm việc ☐ ☐ ✅ 6 Tính cầu tiến Sẵn sàng nhận feedback và cải thiện bản thân ☐ ✅ ☐ 7 Giao tiếp Trình bày ý tưởng, báo cáo công việc rõ ràng ☐ ✅ ☐ 8 Hợp tác nhóm Làm việc hiệu quả với đồng nghiệp, tham gia nhóm ✅ ☐ ☐ 9 Ứng xử chuyên nghiệp Tôn trọng đồng nghiệp, đối tác, môi trường làm việc ✅ ☐ ☐ 10 Tư duy giải quyết vấn đề Nhận diện vấn đề, đề xuất giải pháp, sáng tạo ☐ ✅ ☐ 11 Đóng góp vào dự án/tổ chức Hiệu quả công việc, sáng kiến cải tiến, ghi nhận từ team ✅ ☐ ☐ 12 Tổng thể Đánh giá chung về toàn bộ quá trình thực tập ✅ ☐ ☐ Cần cải thiện Nâng cao tính kỹ luật, chấp hành nghiêm chỉnh nội quy của công ty hoặc bất kỳ trong một tổ chức nào Cải thiện trong cách tư duy giải quyết vấn đề Học cách giao tiếp tốt hơn trong giao tiếp hằng ngày và trong công việc, xử lý tình huống "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/7-feedback/",
	"title": "Chia sẻ, đóng góp ý kiến",
	"tags": [],
	"description": "",
	"content": " ⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTại đây bạn có thể tự do đóng góp ý kiến cá nhân về những trải nghiệm khi tham gia chương trình First Cloud Journey, giúp team FCJ cải thiện những vấn đề còn thiếu sót dựa trên các hạng mục sau:\nĐánh giá chung 1. Môi trường làm việc\nMôi trường làm việc rất thân thiện và cởi mở. Các thành viên trong FCJ luôn sẵn sàng hỗ trợ khi mình gặp khó khăn, kể cả ngoài giờ làm việc. Không gian làm việc gọn gàng, thoải mái, giúp mình tập trung tốt hơn. Tuy nhiên, mình nghĩ có thể bổ sung thêm một số buổi giao lưu hoặc team bonding để mọi người hiểu nhau hơn.\n2. Sự hỗ trợ của mentor / team admin\nMentor hướng dẫn rất chi tiết, giải thích rõ ràng khi mình chưa hiểu và luôn khuyến khích mình đặt câu hỏi. Team admin hỗ trợ các thủ tục, tài liệu và tạo điều kiện để mình làm việc thuận lợi. Mình đánh giá cao việc mentor cho phép mình thử và tự xử lý vấn đề thay vì chỉ đưa đáp án.\n3. Sự phù hợp giữa công việc và chuyên ngành học\nCông việc mình được giao phù hợp với kiến thức mình đã học ở trường, đồng thời mở rộng thêm những mảng mới mà mình chưa từng được tiếp cận. Nhờ vậy, mình vừa củng cố kiến thức nền tảng, vừa học thêm kỹ năng thực tế.\n4. Cơ hội học hỏi \u0026amp; phát triển kỹ năng\nTrong quá trình thực tập, mình học được nhiều kỹ năng mới như sử dụng công cụ quản lý dự án, kỹ năng làm việc nhóm, và cả cách giao tiếp chuyên nghiệp trong môi trường công ty. Mentor cũng chia sẻ nhiều kinh nghiệm thực tế giúp mình định hướng tốt hơn cho sự nghiệp.\n5. Văn hóa \u0026amp; tinh thần đồng đội\nVăn hóa công ty rất tích cực: mọi người tôn trọng lẫn nhau, làm việc nghiêm túc nhưng vẫn vui vẻ. Khi có dự án gấp, mọi người cùng nhau cố gắng, hỗ trợ không phân biệt vị trí. Điều này giúp mình cảm thấy mình là một phần của tập thể, dù chỉ là thực tập sinh.\n6. Chính sách / phúc lợi cho thực tập sinh\nCông ty có hỗ trợ phụ cấp thực tập và tạo điều kiện về thời gian linh hoạt khi cần thiết. Ngoài ra, việc được tham gia các buổi đào tạo nội bộ là một điểm cộng lớn.\nMột số câu hỏi khác Điều bạn hài lòng nhất trong thời gian thực tập? Điều bạn nghĩ công ty cần cải thiện cho các thực tập sinh sau? Nếu giới thiệu cho bạn bè, bạn có khuyên họ thực tập ở đây không? Vì sao? Đề xuất \u0026amp; mong muốn Bạn có đề xuất gì để cải thiện trải nghiệm trong kỳ thực tập? Bạn có muốn tiếp tục chương trình này trong tương lai? Góp ý khác (tự do chia sẻ): "
},
{
	"uri": "http://localhost:1313/workshop-template/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://localhost:1313/workshop-template/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]